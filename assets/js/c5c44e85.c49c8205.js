"use strict";(self.webpackChunkakara=self.webpackChunkakara||[]).push([[5726],{3905:function(e,n,t){t.d(n,{Zo:function(){return m},kt:function(){return d}});var a=t(7294);function l(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){l(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,a,l=function(e,n){if(null==e)return{};var t,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(l[t]=e[t]);return l}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var o=a.createContext({}),u=function(e){var n=a.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},m=function(e){var n=u(e.components);return a.createElement(o.Provider,{value:n},e.children)},s={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},k=a.forwardRef((function(e,n){var t=e.components,l=e.mdxType,r=e.originalType,o=e.parentName,m=p(e,["components","mdxType","originalType","parentName"]),k=u(t),d=l,c=k["".concat(o,".").concat(d)]||k[d]||s[d]||r;return t?a.createElement(c,i(i({ref:n},m),{},{components:t})):a.createElement(c,i({ref:n},m))}));function d(e,n){var t=arguments,l=n&&n.mdxType;if("string"==typeof e||l){var r=t.length,i=new Array(r);i[0]=k;var p={};for(var o in n)hasOwnProperty.call(n,o)&&(p[o]=n[o]);p.originalType=e,p.mdxType="string"==typeof e?e:l,i[1]=p;for(var u=2;u<r;u++)i[u]=t[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}k.displayName="MDXCreateElement"},6697:function(e,n,t){t.r(n),t.d(n,{assets:function(){return m},contentTitle:function(){return o},default:function(){return d},frontMatter:function(){return p},metadata:function(){return u},toc:function(){return s}});var a=t(7462),l=t(3366),r=(t(7294),t(3905)),i=["components"],p={},o="\u8bed\u6cd5",u={unversionedId:"rust/index",id:"rust/index",title:"\u8bed\u6cd5",description:"\u5e38\u91cf",source:"@site/docs/rust/index.md",sourceDirName:"rust",slug:"/rust/",permalink:"/blog/docs/rust/",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rust/index.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"\u5b89\u88c5",permalink:"/blog/docs/rust/setup"},next:{title:"\u6a21\u5757\u5316",permalink:"/blog/docs/rust/modules"}},m={},s=[{value:"\u5e38\u91cf",id:"\u5e38\u91cf",level:2},{value:"\u53d8\u91cf",id:"\u53d8\u91cf",level:2},{value:"shadow",id:"shadow",level:3},{value:"\u51fd\u6570",id:"\u51fd\u6570",level:2},{value:"\u8bed\u53e5\u548c\u8868\u8fbe\u5f0f",id:"\u8bed\u53e5\u548c\u8868\u8fbe\u5f0f",level:2},{value:"\u8bed\u53e5\uff08statement\uff09",id:"\u8bed\u53e5statement",level:3},{value:"\u8868\u8fbe\u5f0f\uff08expression\uff09",id:"\u8868\u8fbe\u5f0fexpression",level:3},{value:"\u63a7\u5236\u6d41",id:"\u63a7\u5236\u6d41",level:2},{value:"if expression",id:"if-expression",level:3},{value:"loop expression",id:"loop-expression",level:3},{value:"loop label",id:"loop-label",level:4},{value:"while",id:"while",level:3},{value:"for...in",id:"forin",level:3},{value:"\u57fa\u672c\u6570\u636e\u7c7b\u578b",id:"\u57fa\u672c\u6570\u636e\u7c7b\u578b",level:2},{value:"\u6807\u91cf\u7c7b\u578b\uff08scalar\uff09",id:"\u6807\u91cf\u7c7b\u578bscalar",level:3},{value:"\u590d\u5408\u7c7b\u578b\uff08compound\uff09",id:"\u590d\u5408\u7c7b\u578bcompound",level:3},{value:"\u5143\u7ec4",id:"\u5143\u7ec4",level:4},{value:"\u6570\u7ec4",id:"\u6570\u7ec4",level:4},{value:"\u7ed3\u6784\u4f53\uff08Struct\uff09",id:"\u7ed3\u6784\u4f53struct",level:2},{value:"impl",id:"impl",level:3},{value:"struct update syntax",id:"struct-update-syntax",level:3},{value:"tuple struct",id:"tuple-struct",level:3},{value:"unit-like struct",id:"unit-like-struct",level:3},{value:"Enum",id:"enum",level:2},{value:"<code>Option&lt;T&gt;</code>",id:"optiont",level:3},{value:"match expression",id:"match-expression",level:3},{value:"If let",id:"if-let",level:3},{value:"\u6240\u6709\u6743\uff08Ownership\uff09",id:"\u6240\u6709\u6743ownership",level:2},{value:"Move",id:"move",level:3},{value:"Copy",id:"copy",level:3},{value:"Clone",id:"clone",level:3},{value:"\u5f15\u7528\uff08borrow\uff09",id:"\u5f15\u7528borrow",level:3},{value:"\u751f\u547d\u5468\u671f\uff08LifeTimes\uff09",id:"\u751f\u547d\u5468\u671flifetimes",level:3},{value:"Generic Lifetimes Parameter",id:"generic-lifetimes-parameter",level:3},{value:"Static Lifetimes",id:"static-lifetimes",level:3},{value:"\u667a\u80fd\u6307\u9488\uff08Smart Pointers\uff09",id:"\u667a\u80fd\u6307\u9488smart-pointers",level:2},{value:"<em>Deref</em>",id:"deref",level:3},{value:"Implicit Deref Coercions",id:"implicit-deref-coercions",level:4},{value:"<em>Drop</em>",id:"drop",level:3},{value:"<code>Box&lt;T&gt;</code>",id:"boxt",level:3},{value:"<code>Rc&lt;T&gt;</code>",id:"rct",level:3},{value:"<code>RefCell&lt;T&gt;</code>",id:"refcellt",level:3},{value:"\u96c6\u5408\uff08Collections\uff09",id:"\u96c6\u5408collections",level:2},{value:"Vector",id:"vector",level:3},{value:"\u5e38\u7528\u65b9\u6cd5",id:"\u5e38\u7528\u65b9\u6cd5",level:4},{value:"String",id:"string",level:3},{value:"HashMap",id:"hashmap",level:3},{value:"Range",id:"range",level:3},{value:"\u8fed\u4ee3\u5668\uff08iteration\uff09",id:"\u8fed\u4ee3\u5668iteration",level:2},{value:"<em>consuming adaptors</em>",id:"consuming-adaptors",level:3},{value:"<em>Iterator adaptors</em>",id:"iterator-adaptors",level:3},{value:"\u6cdb\u578b\uff08Generic\uff09",id:"\u6cdb\u578bgeneric",level:2},{value:"\u9759\u6001\u5206\u53d1",id:"\u9759\u6001\u5206\u53d1",level:3},{value:"\u7279\u5f81\uff08Trait\uff09",id:"\u7279\u5f81trait",level:2},{value:"Trait Bound",id:"trait-bound",level:3},{value:"Trait Object",id:"trait-object",level:3},{value:"Trait Associated Type",id:"trait-associated-type",level:3},{value:"SuperTrait",id:"supertrait",level:3},{value:"Dynamically Sized Type",id:"dynamically-sized-type",level:2},{value:"Slice",id:"slice",level:3},{value:"Trait Object",id:"trait-object-1",level:3},{value:"DST\u4e0e\u80d6\u6307\u9488",id:"dst\u4e0e\u80d6\u6307\u9488",level:3},{value:"\u9519\u8bef\u5904\u7406",id:"\u9519\u8bef\u5904\u7406",level:2},{value:"panic",id:"panic",level:3},{value:"Result",id:"result",level:3},{value:"unwrap",id:"unwrap",level:4},{value:"expect",id:"expect",level:4},{value:"propagating errors",id:"propagating-errors",level:4},{value:"unwrap_or_else",id:"unwrap_or_else",level:4},{value:"\u95ed\u5305",id:"\u95ed\u5305",level:2},{value:"\u6a21\u5f0f\u5339\u914d\uff08pattern match\uff09",id:"\u6a21\u5f0f\u5339\u914dpattern-match",level:2},{value:"<code>refutable</code>\u3001<code>irrefutable</code>",id:"refutableirrefutable",level:3},{value:"Multiple patterns",id:"multiple-patterns",level:3},{value:"\u5339\u914d\u8303\u56f4<code>..=</code>",id:"\u5339\u914d\u8303\u56f4",level:3},{value:"\u89e3\u6784\u8d4b\u503c",id:"\u89e3\u6784\u8d4b\u503c",level:3},{value:"\u89e3\u6784Struct",id:"\u89e3\u6784struct",level:4},{value:"\u89e3\u6784\u679a\u4e3e",id:"\u89e3\u6784\u679a\u4e3e",level:4},{value:"\u89e3\u6784\u5143\u7ec4",id:"\u89e3\u6784\u5143\u7ec4",level:4},{value:"\u7701\u7565\u53d8\u91cf",id:"\u7701\u7565\u53d8\u91cf",level:3},{value:"Match Guard",id:"match-guard",level:3},{value:"@bindings",id:"bindings",level:3},{value:"\u591a\u7ebf\u7a0b\u7f16\u7a0b",id:"\u591a\u7ebf\u7a0b\u7f16\u7a0b",level:2},{value:"Join Handles",id:"join-handles",level:3},{value:"move \u95ed\u5305",id:"move-\u95ed\u5305",level:3},{value:"\u7ebf\u7a0b\u95f4\u901a\u4fe1",id:"\u7ebf\u7a0b\u95f4\u901a\u4fe1",level:3},{value:"\u5176\u4ed6",id:"\u5176\u4ed6",level:2},{value:"r#...#",id:"r",level:3},{value:"\u53d1\u5e03\u4e8c\u8fdb\u5236",id:"\u53d1\u5e03\u4e8c\u8fdb\u5236",level:3},{value:"\u5185\u7f6e\u6a21\u5757",id:"\u5185\u7f6e\u6a21\u5757",level:3},{value:"std::fs",id:"stdfs",level:4}],k={toc:s};function d(e){var n=e.components,t=(0,l.Z)(e,i);return(0,r.kt)("wrapper",(0,a.Z)({},k,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"\u8bed\u6cd5"},"\u8bed\u6cd5"),(0,r.kt)("h2",{id:"\u5e38\u91cf"},"\u5e38\u91cf"),(0,r.kt)("p",null,"\u901a\u8fc7",(0,r.kt)("inlineCode",{parentName:"p"},"const"),"\u5b9a\u4e49\u5e38\u91cf\u503c\u6216\u5e38\u91cf\u8868\u8fbe\u5f0f\uff0c\u4f46\u4e0d\u80fd\u4e3a\u8fd0\u884c\u65f6\u7684\u6c42\u503c\u7ed3\u679c"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},"const HP: u32 = 100;\nconst PI: f32 = 3.14;\nconst N: u32 = 1 + 1;\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},"// error[E0015]: cannot call non-const fn `test` in constants\nconst hp: u32 = test();\n\nfn test() -> u32 {\n    return 200\n}\n")),(0,r.kt)("h2",{id:"\u53d8\u91cf"},"\u53d8\u91cf"),(0,r.kt)("p",null,"\u901a\u8fc7",(0,r.kt)("inlineCode",{parentName:"p"},"let"),"\u58f0\u660e\u53d8\u91cf\u3002\u9ed8\u8ba4\u60c5\u51b5\u58f0\u660e\u4e0d\u53ef\u53d8\uff08immutable\uff09\u7684\u53d8\u91cf\uff0c\u901a\u8fc7",(0,r.kt)("inlineCode",{parentName:"p"},"let mut"),"\u58f0\u660e\u53ef\u53d8\uff08mutable\uff09\u53d8\u91cf\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},"let mut mp: u32 = 100;\nmp = 200; // ok\n\nlet hp: u32 = 100;\nhp = 200; // error\n")),(0,r.kt)("h3",{id:"shadow"},"shadow"),(0,r.kt)("p",null,"\u5728\u540c\u4e00\u4e2a\u4f5c\u7528\u57df\u4e0b\u53ef\u4ee5\u591a\u6b21",(0,r.kt)("inlineCode",{parentName:"p"},"let"),"\u540c\u4e00\u4e2a\u53d8\u91cf\u540d\uff0c\u540e\u4e00\u6b21\u5c06\u4f1a",(0,r.kt)("inlineCode",{parentName:"p"},"shadow"),"\u524d\u4e00\u6b21\u7684\u58f0\u660e\u3002\u4e3e\u4e2aJavaScript\u7684\u4f8b\u5b50\u4e3a\u4ec0\u4e48\u6211\u4eec\u9700\u8981\u8fd9\u6837\u7684\u529f\u80fd\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"function main() {\n      const { data } = test()\n    const data2 = test2(data)\n    return {\n        data: data2\n    }\n}\n\n// \u671f\u671b\u7684\u5199\u6cd5\nfunction main() {\n   const { data } = test()\n    const data = test2(data)\n    return {\n        data // \u66f4\u7b80\u6d01\n    }\n}\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'let hp: u32 = 100;\nlet hp: f32 = 100.12;\nprintln!("{}", hp) // 100.12\n')),(0,r.kt)("h2",{id:"\u51fd\u6570"},"\u51fd\u6570"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},"fn main() -> u32 {\n    return 200\n}\n")),(0,r.kt)("h2",{id:"\u8bed\u53e5\u548c\u8868\u8fbe\u5f0f"},"\u8bed\u53e5\u548c\u8868\u8fbe\u5f0f"),(0,r.kt)("h3",{id:"\u8bed\u53e5statement"},"\u8bed\u53e5\uff08statement\uff09"),(0,r.kt)("p",null,"\u8bed\u53e5\u4e0d\u5305\u542b\u6c42\u503c\u64cd\u4f5c\uff0c\u5b83\u662f\u4e00\u4e2a\u72ec\u7acb\u7684\u5355\u5143\u3002"),(0,r.kt)("h3",{id:"\u8868\u8fbe\u5f0fexpression"},"\u8868\u8fbe\u5f0f\uff08expression\uff09"),(0,r.kt)("p",null,"\u8868\u8fbe\u5f0f\u6c42\u503c\u7684\u7ed3\u679c\u5c06\u8fd4\u56de\u7ed9\u4e0a\u5c42\u7684AST\u8282\u70b9\u53bb\u4f7f\u7528\u3002\u5bf9\u4e8e",(0,r.kt)("inlineCode",{parentName:"p"},"x + 1"),"\uff0c\u5982\u679c\u6211\u4eec\u7ed9\u5b83\u52a0\u4e0a\u5206\u53f7\uff0c\u5b83\u4f1a\u88ab\u89c6\u4e3a\u72ec\u7acb\u7684\u8bed\u53e5\uff1b\u5982\u679c\u6211\u4eec\u4e0d\u7ed9\u4ed6\u52a0\u4e0a\u5206\u53f7\uff0c\u5b83\u5c31\u4f1a\u88ab\u89c6\u4e3a\u8868\u8fbe\u5f0f\u3002"),(0,r.kt)("p",null,"\u9664\u4e86\u5e38\u89c1\u7684\u5404\u79cd\u8868\u8fbe\u5f0f\uff08\u5982",(0,r.kt)("inlineCode",{parentName:"p"},"1 + 1"),"\u3001\u51fd\u6570\u8c03\u7528\u7b49\uff09\uff0c\u5728Rust\u4e2d",(0,r.kt)("inlineCode",{parentName:"p"},"if"),"\u3001",(0,r.kt)("inlineCode",{parentName:"p"},"loop"),"\u3001",(0,r.kt)("inlineCode",{parentName:"p"},"match"),"\uff08\u7c7b\u4f3c",(0,r.kt)("inlineCode",{parentName:"p"},"switch"),"\uff09\u4e5f\u662f\u8868\u8fbe\u5f0f\uff0c\u751a\u81f3\u5757\u7ea7\u4f5c\u7528\u57df\u4e5f\u662f\u8868\u8fbe\u5f0f\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'let value = {\n    let x = 1;\n    x + 1\n};\nprintln!("{:?}", value) // 2\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'let value = {};\nprintln!("{:?}", value) // ()\n')),(0,r.kt)("h2",{id:"\u63a7\u5236\u6d41"},"\u63a7\u5236\u6d41"),(0,r.kt)("h3",{id:"if-expression"},"if expression"),(0,r.kt)("p",null,"Rust\u4e0d\u4f1a\u81ea\u52a8\u628a\u76ee\u6807\u503c\u8f6c\u5316\u4e3a\u5bf9\u5e94\u7684\u5e03\u5c14\u503c"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},"if 2 > 1 { // \u6ca1\u6709\u5c0f\u62ec\u53f7\n\n} else if 3 > 2 {\n\n} else {\n\n}\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'let condition = true;\nlet number = if condition { 5 } else { 6 };\n\nprintln!("The value of number is: {number}");\n')),(0,r.kt)("h3",{id:"loop-expression"},"loop expression"),(0,r.kt)("p",null,"\u901a\u8fc7",(0,r.kt)("inlineCode",{parentName:"p"},"loop"),"\u5173\u952e\u5b57\u5faa\u73af\u6267\u884c\u67d0\u4e9b\u64cd\u4f5c\uff0c\u901a\u8fc7",(0,r.kt)("inlineCode",{parentName:"p"},"break"),"\u9000\u51fa\u5f53\u524d\u5faa\u73af\uff0c\u540c\u65f6",(0,r.kt)("inlineCode",{parentName:"p"},"break"),"\u7684\u503c\u4f1a\u4f5c\u4e3a",(0,r.kt)("inlineCode",{parentName:"p"},"loop"),"\u8868\u8fbe\u5f0f\u7684\u6c42\u503c\u7ed3\u679c\u8fdb\u884c\u8fd4\u56de\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'fn main() {\n    let mut counter = 0;\n\n    let result = loop {\n        counter += 1;\n\n        if counter == 10 {\n            break counter * 2;\n        }\n    };\n\n    println!("The result is {result}"); // 20\n}\n')),(0,r.kt)("h4",{id:"loop-label"},"loop label"),(0,r.kt)("p",null,"\u901a\u8fc7\u7ed9",(0,r.kt)("inlineCode",{parentName:"p"},"loop"),"\u4e00\u4e2a\u6307\u5b9a\u7684\u540d\u79f0\uff0c\u5728\u591a\u4e2a",(0,r.kt)("inlineCode",{parentName:"p"},"loop"),"\u8868\u8fbe\u5f0f\u5d4c\u5957\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u53ef\u4ee5",(0,r.kt)("inlineCode",{parentName:"p"},"break"),"\u67d0\u4e2a\u5177\u540d\u7684",(0,r.kt)("inlineCode",{parentName:"p"},"loop")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},"fn main() {\n  'test: loop {\n    loop {\n      break 'test;\n    }\n  }\n}\n")),(0,r.kt)("h3",{id:"while"},"while"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},"fn main() {\n  while true {\n    // do somethign\n  }\n}\n")),(0,r.kt)("h3",{id:"forin"},"for...in"),(0,r.kt)("p",null,"\u4e0eJavaScript\u4e2d\u7528\u6765\u8fed\u4ee3\u5bf9\u8c61\u7684key\u503c\u96c6\u5408\u4e0d\u540c\uff0cRust\u4e2d",(0,r.kt)("inlineCode",{parentName:"p"},"for...in"),"\u76f4\u63a5\u7528\u6765\u8fed\u4ee3\u96c6\u5408"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'fn main() {\n    let a = [10, 20, 30, 40, 50];\n\n    for element in a {\n        println!("the value is: {element}");\n    }\n}\n\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'fn main() {\n    for number in (1..4).rev() { // (1..4)\u4e3aRange\uff0c\u5de6\u95ed\u53f3\u5f00\u533a\u95f4\n        println!("{number}!");\n    }\n    println!("LIFTOFF!!!");\n}\n')),(0,r.kt)("h2",{id:"\u57fa\u672c\u6570\u636e\u7c7b\u578b"},"\u57fa\u672c\u6570\u636e\u7c7b\u578b"),(0,r.kt)("h3",{id:"\u6807\u91cf\u7c7b\u578bscalar"},"\u6807\u91cf\u7c7b\u578b\uff08scalar\uff09"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u6574\u6570",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u7b26\u53f7\u6574\u6570\uff0c\u5982",(0,r.kt)("inlineCode",{parentName:"li"},"i32"),"\u3001",(0,r.kt)("inlineCode",{parentName:"li"},"i64")),(0,r.kt)("li",{parentName:"ul"},"\u65e0\u7b26\u53f7\u6574\u6570\uff0c\u5982",(0,r.kt)("inlineCode",{parentName:"li"},"u32"),"\u3001",(0,r.kt)("inlineCode",{parentName:"li"},"u64")))),(0,r.kt)("li",{parentName:"ul"},"\u6d6e\u70b9\u6570",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u5982",(0,r.kt)("inlineCode",{parentName:"li"},"f32"),"\u3001",(0,r.kt)("inlineCode",{parentName:"li"},"f64")))),(0,r.kt)("li",{parentName:"ul"},"\u5e03\u5c14\u503c",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"let value: bool = true;")))),(0,r.kt)("li",{parentName:"ul"},"\u5b57\u7b26",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"let c: char = 'a';"))))),(0,r.kt)("h3",{id:"\u590d\u5408\u7c7b\u578bcompound"},"\u590d\u5408\u7c7b\u578b\uff08compound\uff09"),(0,r.kt)("p",null,"\u6807\u91cf\u7c7b\u578b\u53ea\u80fd\u5305\u542b\u4e00\u4e2a\u503c\uff1b\u800c\u590d\u5408\u7c7b\u578b\u53ef\u4ee5\u5305\u542b\u591a\u4e2a\u503c\u3002"),(0,r.kt)("h4",{id:"\u5143\u7ec4"},"\u5143\u7ec4"),(0,r.kt)("p",null,"\u6bcf\u4e00\u9879\u7684\u7c7b\u578b\u53ef\u4ee5\u4e0d\u540c\uff0c\u957f\u5ea6\u56fa\u5b9a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},"fn main() {\n  let tup: (i32, f64, u8) = (500, 6.4, 1);\n  let a = tup.0;\n  let b = tup.1;\n  let c = tup.2;\n  let (x, y, z) = tup;\n}\n\n")),(0,r.kt)("h4",{id:"\u6570\u7ec4"},"\u6570\u7ec4"),(0,r.kt)("p",null,"\u6bcf\u4e00\u9879\u7684\u7c7b\u578b\u5fc5\u987b\u76f8\u540c\uff0c\u957f\u5ea6\u540c\u6837\u56fa\u5b9a\uff08\u8fd9\u4e00\u70b9\u548cJavaScript\u4e0d\u540c\uff09"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},"fn main() {\n    let q = [1, 2, 3, 4, 5];\n    let w: [i32; 5] = [1, 2, 3, 4, 5];\n    let e = [3; 5]; // [3, 3, 3, 3, 3]\n    let x = q[0];\n    let y = q[1];\n}\n")),(0,r.kt)("h2",{id:"\u7ed3\u6784\u4f53struct"},"\u7ed3\u6784\u4f53\uff08Struct\uff09"),(0,r.kt)("h3",{id:"impl"},"impl"),(0,r.kt)("p",null,"\u901a\u8fc7",(0,r.kt)("inlineCode",{parentName:"p"},"impl"),"\u5173\u952e\u5b57\u5b9e\u73b0\u7ed3\u6784\u4f53\u7684\u65b9\u6cd5\uff08\u7c7b\u4f3c\u539f\u578b\u65b9\u6cd5\uff09\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e0d\u662f\u5b9e\u4f8b",(0,r.kt)("inlineCode",{parentName:"p"},"self"),"\u7684\u65b9\u6cd5\u88ab\u79f0\u4f5c\u5173\u8054\u51fd\u6570",(0,r.kt)("inlineCode",{parentName:"p"},"associted function"),"\uff08\u7c7b\u4f3c\u9759\u6001\u65b9\u6cd5\uff09"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'struct People {\n    name: String,\n    age: u32,\n    male: bool,\n}\n\nimpl People {\n    fn is_male(&self) -> bool {\n        self.male\n    }\n\n    fn is_young(&self) -> bool {\n        self.age < 20\n    }\n\n    fn new(name: String, age: u32, male: bool) -> People {\n        People {\n            name,\n            age,\n            male,\n        }\n    }\n}\n\nfn main() {\n   let p = People::new(String::from("akara"), 20, true);\n\n   let is_male = p.is_male();\n   let is_young = p.is_young();\n\n   println!("{}, {}, {}", p.name, is_male, is_young);\n}\n')),(0,r.kt)("h3",{id:"struct-update-syntax"},"struct update syntax"),(0,r.kt)("p",null,"\u7c7b\u4f3c\u6269\u5c55\u8fd0\u7b97\u7b26",(0,r.kt)("inlineCode",{parentName:"p"},"spread syntax"),"\uff0cRust\u901a\u8fc7",(0,r.kt)("inlineCode",{parentName:"p"},".."),"\u6765\u6839\u636e\u4e00\u4e2a\u7ed3\u6784\u4f53\u751f\u6210\u4e00\u4e2a\u65b0\u7684\u7ed3\u6784\u4f53"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'let p3 = People {\n    age: 30,\n    ..p2 // \u4e24\u4e2a\u70b9\n};\nprintln!("{}, {}", p1.is_male(), p3.age)\n')),(0,r.kt)("h3",{id:"tuple-struct"},"tuple struct"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},"struct Point(i32, i32, i32);\n\nlet p = Point(1, 1, 0);\nlet People(x, y, z) = p;\nlet a = p.0;\n")),(0,r.kt)("h3",{id:"unit-like-struct"},"unit-like struct"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},"struct Point;\n\nlet p = Point;\n")),(0,r.kt)("h2",{id:"enum"},"Enum"),(0,r.kt)("p",null,"\u5728Rust\u4e2d\u4f7f\u7528",(0,r.kt)("inlineCode",{parentName:"p"},"enum"),"\u5b9a\u4e49\u679a\u4e3e\uff0c\u5176\u5b9e\u7b49\u4ef7\u4e8e\u5b9a\u4e49\u4e86\u4e00\u7ec4\u7c7b\u578b\u76f8\u540c\u7684",(0,r.kt)("inlineCode",{parentName:"p"},"struct"),"\u3002\u5982\u4e0b\u65b9\u6211\u4eec\u901a\u8fc7",(0,r.kt)("inlineCode",{parentName:"p"},"enum Days"),"\u5b9a\u4e49\u4e86\u56db\u4e2a\u679a\u4e3e\u7684\u53d8\u4f53",(0,r.kt)("inlineCode",{parentName:"p"},"variants"),"\uff0c\u8fd9\u56db\u4e2a\u53d8\u4f53\u5176\u5b9e\u5206\u522b\u662f",(0,r.kt)("inlineCode",{parentName:"p"},"unit-like struct"),"\u3001",(0,r.kt)("inlineCode",{parentName:"p"},"tuple struct"),"\u4ee5\u53ca\u666e\u901a\u7684",(0,r.kt)("inlineCode",{parentName:"p"},"struct"),"\uff0c\u5b83\u4eec\u7684\u7c7b\u578b\u90fd\u7528",(0,r.kt)("inlineCode",{parentName:"p"},"Days"),"\u8868\u793a\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'enum Days {\n    One,\n    Two(u32),\n    Three(bool, bool),\n    Four {\n        x: i32,\n        y: i32,\n    }\n}\n\nfn main() {\n    let num = test(Days::Two(20));\n    println!("{}", num);\n}\n\n\nfn test(e: Days) -> u32 {\n    match e {\n        Days::One => (),\n        Days::Two(num) => {\n            num\n        },\n        Days::Three(a, b) => (),\n        Days::Four { x, y } => (),\n        _ => (),\n    }\n}\n')),(0,r.kt)("h3",{id:"optiont"},(0,r.kt)("inlineCode",{parentName:"h3"},"Option<T>")),(0,r.kt)("p",null,"Rust\u4e2d\u4e0d\u5b58\u5728\u7a7a\u503c\u7684\u6982\u5ff5\uff0c\u4e00\u822c\u901a\u8fc7\u5185\u7f6e\u7684",(0,r.kt)("inlineCode",{parentName:"p"},"Option<T>"),"\u6a21\u62df\u53ef\u80fd\u4e3a\u7a7a\u503c\u7684\u60c5\u51b5"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},"enum Option<T> {\n    None,\n    Some(T),\n}\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'fn main() {\n    let a = test(Option::Some(20));\n    println!("{}", a)\n}\n\nfn test(o: Option<u32>) -> u32 {\n    match o {\n        None => 0,\n        Some(value) => {\n            value\n        }\n    }\n}\n')),(0,r.kt)("h3",{id:"match-expression"},"match expression"),(0,r.kt)("p",null,"Rust\u4e2d\u7684",(0,r.kt)("inlineCode",{parentName:"p"},"match"),"\u8868\u8fbe\u5f0f\u7c7b\u4f3c\u4e00\u822c\u7684",(0,r.kt)("inlineCode",{parentName:"p"},"switch"),"\u4f46\u529f\u80fd\u66f4\u52a0\u5f3a\u5927\uff0c\u56e0\u4e3a\u5b83\u652f\u6301\u6a21\u5f0f\u5339\u914d",(0,r.kt)("inlineCode",{parentName:"p"},"pattern match "),"\uff0c\u6a21\u5f0f\u53ef\u4ee5\u662f\u5b57\u9762\u91cf\u7684\u503c\u3001\u53d8\u91cf\u540d\u3001",(0,r.kt)("inlineCode",{parentName:"p"},"wildcards"),"\u3001\u4ee5\u53ca\u5176\u4ed6\u7684\u4e1c\u897f\u3002"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"match"),"\u7ecf\u5e38\u88ab\u7528\u6765\u5bf9\u679a\u4e3e\u8fdb\u884c\u6a21\u5f0f\u5339\u914d\uff0c\u5e76\u80fd\u591f\u83b7\u53d6\u5230\u5bf9\u5e94\u7684\u679a\u4e3e\u5185\u90e8\u503c\u3002"),(0,r.kt)("h3",{id:"if-let"},"If let"),(0,r.kt)("p",null,"Rust\u8fd8\u63d0\u4f9b\u4e86",(0,r.kt)("inlineCode",{parentName:"p"},"match"),"\u7684\u8bed\u6cd5\u7cd6\uff0c",(0,r.kt)("inlineCode",{parentName:"p"},"if let"),"\u53ef\u4ee5\u8ba9\u6211\u4eec\u5feb\u901f\u5339\u914d\u67d0\u4e2a\u6a21\u5f0f\u5e76\u63d0\u53d6\u503c"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'fn main() {\n    let a = test(Option::Some(20));\n    let b = test(Option::None);\n    println!("{}, {}", a, b)\n}\n\n\nfn test(o: Option<u32>) -> u32 {\n    if let Some(value) = o { // \u5355\u7b49\u53f7\n        value\n    } else {\n        0\n    }\n}\n')),(0,r.kt)("h2",{id:"\u6240\u6709\u6743ownership"},"\u6240\u6709\u6743\uff08Ownership\uff09"),(0,r.kt)("blockquote",null,(0,r.kt)("ul",{parentName:"blockquote"},(0,r.kt)("li",{parentName:"ul"},"Each value in Rust has an ",(0,r.kt)("em",{parentName:"li"},"owner"),"."),(0,r.kt)("li",{parentName:"ul"},"There can only be one owner at a time."),(0,r.kt)("li",{parentName:"ul"},"When the owner goes out of scope, the value will be dropped."))),(0,r.kt)("p",null,"\u5bf9\u4e8e\u50cfC\u3001C++\u8fd9\u7c7b\u7684\u4f20\u7edf\u8bed\u8a00\uff0c\u6211\u4eec\u9700\u8981\u5728\u8fd0\u884c\u65f6\u624b\u52a8\u8fdb\u884c\u5185\u5b58\u7684\u5206\u914d\u4e0e\u91ca\u653e\uff0c\u8fd9\u4f1a\u589e\u5927\u6211\u4eec\u5f00\u53d1\u65f6\u7684\u5fc3\u667a\u8d1f\u62c5\uff1b\u56e0\u6b64\u50cfGo\u3001Java\u3001JavaScript\u8fd9\u4e9b\u8bed\u8a00\uff0c\u90fd\u662f\u901a\u8fc7\u5783\u573e\u6536\u96c6\uff08GC\uff09\u5b9e\u73b0\u5bf9\u65e0\u7528\u5185\u5b58\u8fdb\u884c\u81ea\u52a8\u56de\u6536\uff0c\u4e00\u79cd\u5e38\u89c1\u7684\u5b9e\u73b0\u662f\u201c\u5f15\u7528\u8ba1\u6570\u201d\uff0c\u5728\u8fd0\u884c\u65f6\u6536\u96c6\u5185\u5b58\u6570\u636e\u88ab\u5f15\u7528\u7684\u60c5\u51b5\uff0c\u5f53\u4e00\u5757\u5185\u5b58\u4e0d\u518d\u88ab\u4efb\u4f55\u6307\u9488\u6307\u5411\uff0c\u6211\u4eec\u5c31\u4f1a\u81ea\u52a8\u91ca\u653e\u8fd9\u5757\u5185\u5b58\u7a7a\u95f4\uff0c\u7136\u800c\u867d\u7136GC\u53ef\u4ee5\u964d\u4f4e\u6211\u4eec\u7684\u5fc3\u667a\u8d1f\u62c5\uff0c\u540c\u65f6\u4e5f\u4f1a\u964d\u4f4e\u8fd0\u884c\u6548\u7387\u3002"),(0,r.kt)("p",null,"\u800cRust\u901a\u8fc7\u5f15\u5165",(0,r.kt)("strong",{parentName:"p"},"\u6240\u6709\u6743"),"\u7684\u6982\u5ff5\u6765\u5c1d\u8bd5\u89e3\u51b3\u8fd9\u6837\u7684\u95ee\u9898\uff0c\u4e00\u65b9\u9762\u65e0\u9700\u5f00\u53d1\u8005\u624b\u52a8\u5206\u914d\u4e0e\u91ca\u653e\u5185\u5b58\uff0c\u53e6\u4e00\u65b9\u9762\u6ca1\u6709\u8fd0\u884c\u65f6\u7684\u5f00\u9500\u4e5f\u80fd\u4fdd\u8bc1\u6781\u81f4\u7684\u6027\u80fd\u3002\u6240\u6709\u6743\u7684\u5b9e\u73b0\u5305\u62ec\u4ee5\u4e0b\u51e0\u4e2a\u5927\u7684\u6838\u5fc3\u8981\u7d20\uff1a"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"\u9996\u5148\u5728Rust\u4e2d",(0,r.kt)("strong",{parentName:"p"},"\u5f53\u53d8\u91cf\u79bb\u5f00\u4f5c\u7528\u57df\u7684\u65f6\u5019\u5c31\u4f1a\u56de\u6536\u53d8\u91cf\u6240\u7ed1\u5b9a\u7684\u5185\u5b58"),"\uff0c\u5bf9\u4e8e\u5f62\u5982",(0,r.kt)("inlineCode",{parentName:"p"},"Rc<RefCell<Box<String>>>"),"\u8fd9\u6837\u7684\u901a\u8fc7\u667a\u80fd\u6307\u9488\u5b9e\u73b0\u7684\u53d8\u91cf\uff0c\u4f1a\u4f9d\u6b21\u901a\u8fc7\u6790\u6784\u51fd\u6570Drop\u6389\u5bf9\u5e94\u7684\u5185\u5b58\u7a7a\u95f4\u3002")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"\u5b9e\u73b0\u7b2c\u4e00\u70b9\u7684\u524d\u63d0\u662f",(0,r.kt)("strong",{parentName:"p"},"\u4e0d\u80fd\u5b58\u5728\u591a\u4e2a\u53d8\u91cf\u7684\u6307\u9488\u6307\u5411\u540c\u4e00\u5757\u5185\u5b58\u7684\u60c5\u51b5"),"\uff0c\u8fd9\u4f1a\u5bfc\u81f4\u591a\u6b21\u91ca\u653e\u5185\u5b58\u7684\u60c5\u51b5\uff0c\u800cRust\u5b9e\u9645\u4e0a\u662f\u901a\u8fc7",(0,r.kt)("strong",{parentName:"p"},"Move"),"\u64cd\u4f5c\u6765\u4fdd\u8bc1\u8fd9\u4e2a\u524d\u63d0\uff0c\u540e\u7eed\u7bc7\u7ae0\u5c06\u8be6\u7ec6\u4ecb\u7ecd",(0,r.kt)("strong",{parentName:"p"},"Move"),"\u4ee5\u53ca",(0,r.kt)("strong",{parentName:"p"},"Copy"),"\u3001",(0,r.kt)("strong",{parentName:"p"},"Clone"),"\u7b49\u91cd\u8981\u6982\u5ff5\u3002")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"\u5f15\u7528\u548c\u751f\u547d\u5468\u671f\u3002\u5f15\u7528\u7684\u672c\u8d28\u662f\u4e00\u4e2a\u6307\u9488\uff0c\u5b83\u5e76\u4e0d\u6ca1\u6709\u5b9e\u73b0Drop Trait\uff0c\u6211\u4eec\u53ef\u4ee5\u5141\u8bb8\u591a\u4e2a\u5f15\u7528\u6307\u5411\u540c\u4e00\u5757\u5185\u5b58\u7a7a\u95f4\uff0c\u56e0\u4e3a\u5f15\u7528\u53d8\u91cf\u79bb\u5f00\u4f5c\u7528\u57df\u7684\u65f6\u5019\u4e0d\u4f1aDrop\u5176\u6240\u6307\u5411\u7684\u5185\u5b58\u7a7a\u95f4\u3002\u7f16\u8bd1\u5668\u4f1a\u6821\u9a8c\u5f15\u7528\u7684\u6709\u6548\u6027\u6765\u907f\u514d\u53ef\u80fd\u5b58\u5728\u7684\u95ee\u9898\uff0c\u81f3\u5c11\u5305\u62ec\u4ee5\u4e0b\u539f\u5219\uff1a"),(0,r.kt)("ol",{parentName:"li"},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"\u5bf9\u4e8e\u4e00\u4e2a",(0,r.kt)("inlineCode",{parentName:"p"},"immutable"),"\u53d8\u91cf\u6765\u8bf4\uff0c\u6211\u4eec\u4e0d\u80fd\u4fee\u6539\u8be5\u53d8\u91cf\u6240\u62e5\u6709\u7684\u5185\u5b58\uff0c\u540c\u7406\u6211\u4eec\u4e5f\u53ea\u80fd\u521b\u5efa",(0,r.kt)("inlineCode",{parentName:"p"},"immutable"),"\u5f15\u7528\u6307\u5411\u4efb\u610f\u90e8\u5206\u5185\u5b58\u3002")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"\u5bf9\u4e8e\u4e00\u4e2a",(0,r.kt)("inlineCode",{parentName:"p"},"mutable"),"\u53d8\u91cf\u6765\u8bf4\uff0c\u6211\u4eec\u53ef\u4ee5\u4fee\u6539\u8be5\u53d8\u91cf\u6240\u62e5\u6709\u7684\u5185\u5b58\uff0c\u53ef\u4ee5\u521b\u5efa",(0,r.kt)("inlineCode",{parentName:"p"},"immutable/mutable"),"\u5f15\u7528\u6307\u5411\u4efb\u610f\u90e8\u5206\u5185\u5b58\u3002")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"\u5bf9\u4e8e\u540c\u4e00\u4e2a\u53d8\u91cf\u6765\u8bf4\uff0c\u540c\u65f6\u6700\u591a\u53ea\u80fd\u6709\u4e00\u4e2a",(0,r.kt)("inlineCode",{parentName:"p"},"mutable"),"\u5f15\u7528\uff0c\u5e76\u4e14\u4e0d\u80fd\u5b58\u5728",(0,r.kt)("inlineCode",{parentName:"p"},"mutable"),"\u5f15\u7528\u548c",(0,r.kt)("inlineCode",{parentName:"p"},"immutable"),"\u5f15\u7528\u540c\u65f6\u5b58\u5728\u7684\u60c5\u51b5\u3002")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"\u53ef\u4ee5\u628a\u53d8\u91cf\u8d4b\u503c\u7ed9\u53e6\u4e00\u4e2a\u53d8\u91cf\u6765\u8f6c\u79fb\u6240\u6709\u6743\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528\u53d8\u91cf\u672c\u8eab\u6765\u8f6c\u4ea4\u90e8\u5206\u5185\u5b58\u7684\u6240\u6709\u6743\uff0c\u4f46\u4e0d\u80fd\u901a\u8fc7\u8be5\u53d8\u91cf\u7684\u5f15\u7528\u6765\u8f6c\u4ea4\u8be5\u53d8\u91cf\u7684\u90e8\u5206\u6240\u7528\u6743\u3002"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'// ok\nlet p = Box::new(String::from("hi"));\nlet p2 = p;\n\n// ok\nlet p = Box::new(String::from("hi"));\nlet p2 = *p;\n\n// error\nlet mut p = Box::new(String::from("hi"));\nlet p2 = &mut p;\nlet p3 = **p2; // cannot move out of `**p2` which is behind a mutable reference move occurs because `**p2` has type `String`, which does not implement the `Copy` trait\n')))),(0,r.kt)("p",{parentName:"li"},"\u6ce8\uff1a\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u54ea\u6015\u53ea",(0,r.kt)("inlineCode",{parentName:"p"},"borrow"),"\u4e00\u90e8\u5206\u5185\u5b58\u4e5f\u89c6\u4e3a",(0,r.kt)("inlineCode",{parentName:"p"},"borrow"),"\u8be5\u53d8\u91cf\u672c\u8eab\u3002"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'let mut a = Rc::new(RefCell::new(Box::new(String::from("akara"))));\n        \nlet b = &*a;\n                - immutable borrow occurs here\nlet c = &mut a;\n                ^^^^^^ mutable borrow occurs here\nb;\n- immutable borrow later used here\n')))),(0,r.kt)("h3",{id:"move"},"Move"),(0,r.kt)("p",null,"\u5bf9\u4e8e\u50cf",(0,r.kt)("inlineCode",{parentName:"p"},"String"),"\u8fd9\u6837\u7684\u667a\u80fd\u6307\u9488\uff0c\u6211\u4eec\u77e5\u9053\u5b83\u4f1a\u5728\u6808\u4e2d\u5b58\u653e\u6307\u9488",(0,r.kt)("inlineCode",{parentName:"p"},"ptr"),"\u3001",(0,r.kt)("inlineCode",{parentName:"p"},"len"),"\u3001",(0,r.kt)("inlineCode",{parentName:"p"},"capacity"),"\uff0c\u5e76\u901a\u8fc7\u6307\u9488\u6307\u5411\u5806\u5185\u5b58\u4e2d\u7684\u5b9e\u9645\u6570\u636e\u3002\u800c\u5f53\u6211\u4eec\u5c1d\u8bd5\u628a",(0,r.kt)("inlineCode",{parentName:"p"},"String"),"\u7c7b\u578b\u7684\u503c\u8d4b\u503c\u7ed9\u4e00\u4e2a\u65b0\u7684\u53d8\u91cf\u4f1a\u53d1\u751f\u4ec0\u4e48\u5462\uff1f\u5bf9\u4e8e\u524d\u7aef\u5f00\u53d1\u8005\u800c\u8a00\uff0c\u8fd9\u6837\u7684\u573a\u666f\u5f88\u50cfJavaScript\u4e2d\u7684\u5bf9\u8c61\u6d45\u62f7\u8d1d\uff0c\u4f46\u662f\u56de\u60f3\u6211\u4eec\u5148\u524d\u6240\u8bf4\u7684Rust\u4e2d\u4e0d\u5141\u8bb8\u591a\u4e2a\u6307\u9488\u6307\u5411\u540c\u4e00\u5757\u5806\u5185\u5b58\uff0c\u6240\u4ee5\u5f88\u660e\u663e\u8fd9\u91cc\u53d1\u751f\u7684\u5e76\u4e0d\u662f\u6d45\u62f7\u8d1d\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'let s = String::from("akara");\nlet s2 = s;\n\nprintln!("{:?}", s); // \u62a5\u9519\n')),(0,r.kt)("p",null,"\u4e8b\u5b9e\u4e0a\uff0c\u5f53\u6211\u4eec\u8fdb\u884c",(0,r.kt)("strong",{parentName:"p"},"\u8d4b\u503c\u64cd\u4f5c\u3001\u51fd\u6570\u4f20\u53c2\u3001\u51fd\u6570\u8fd4\u56de\u503c"),"\u7684\u65f6\u5019\uff0c\u6839\u636e\u7c7b\u578b\u7684\u4e0d\u540c\u53ef\u80fd\u4f1a\u6267\u884c",(0,r.kt)("strong",{parentName:"p"},"Move"),"\u6216\u8005",(0,r.kt)("strong",{parentName:"p"},"Copy"),"\u64cd\u4f5c\u3002\u66f4\u5177\u4f53\u7684\u6765\u8bf4\uff0c\u901a\u5e38\u9ed8\u8ba4\u4f1a\u6267\u884c",(0,r.kt)("strong",{parentName:"p"},"Move"),"\u64cd\u4f5c\uff0c\u4f46\u5982\u679c\u8be5\u7c7b\u578b\u5b9e\u73b0\u4e86",(0,r.kt)("inlineCode",{parentName:"p"},"Copy Trait"),"\uff0c\u6267\u884c\u7684\u5c31\u662f",(0,r.kt)("strong",{parentName:"p"},"Copy"),"\u64cd\u4f5c\u3002"),(0,r.kt)("p",null,"\u90a3\u4e48",(0,r.kt)("strong",{parentName:"p"},"Move"),"\u64cd\u4f5c\u5230\u5e95\u505a\u4e86\u4ec0\u4e48\uff1f\u62ff\u4e0a\u8ff0\u4ee3\u7801\u4e3a\u4f8b\u5b50\uff0c\u5f53\u6211\u4eec\u6267\u884c",(0,r.kt)("inlineCode",{parentName:"p"},"let s2 = s"),"\u65f6\uff0c\u9996\u5148\u4f1a\u5c06",(0,r.kt)("inlineCode",{parentName:"p"},"s"),"\u6240\u7ed1\u5b9a\u7684\u503c\uff08\u5373\u5728\u6808\u4e0a\u5b58\u50a8\u7684",(0,r.kt)("inlineCode",{parentName:"p"},"ptr"),"\u3001",(0,r.kt)("inlineCode",{parentName:"p"},"len"),"\u3001",(0,r.kt)("inlineCode",{parentName:"p"},"capacity"),"\uff09\u62f7\u8d1d\u5230",(0,r.kt)("inlineCode",{parentName:"p"},"s2"),"\u7684\u4f4d\u7f6e\u4e0a\uff0c\u5230\u8fd9\u4e00\u6b65\u611f\u89c9\u548c\u6d45\u62f7\u8d1d\u6ca1\u6709\u533a\u522b\uff0c\u4f46\u91cd\u8981\u7684\u662f\u540e\u7eed\u7684\u64cd\u4f5c\u3002\u6b64\u65f6",(0,r.kt)("inlineCode",{parentName:"p"},"s"),"\u4f1a\u88ab\u91cd\u7f6e\u4e3a\u672a\u521d\u59cb\u5316\u7684\u72b6\u6001\uff0c\u4e5f\u53ef\u4ee5\u7406\u89e3\u6b64\u65f6",(0,r.kt)("inlineCode",{parentName:"p"},"s"),"\u4f4d\u7f6e\u5bf9\u5e94\u7684\u5185\u5b58\u5df2\u7ecf\u88ab\u56de\u6536\u4e86\uff0c\u56e0\u6b64\u6211\u4eec\u4e0d\u80fd\u518d\u901a\u8fc7",(0,r.kt)("inlineCode",{parentName:"p"},"s"),"\u53d8\u91cf\u6765\u5c1d\u8bd5\u8bbf\u95ee\u6570\u636e\u4e86\u3002"),(0,r.kt)("h3",{id:"copy"},"Copy"),(0,r.kt)("p",null,"\u5bf9\u4e8e\u6307\u9488\u53d8\u91cf\u7684\u91cd\u65b0\u8d4b\u503c\uff0c\u6211\u4eec\u4f1a\u4f7f\u7528Move\u6765\u786e\u4fdd\u4e0d\u5b58\u5728\u591a\u4e2a\u6307\u9488\u6307\u5411\u540c\u4e00\u5757\u6570\u636e\u7684\u60c5\u51b5\uff0c\u800c\u5bf9\u4e8e\u975e\u6307\u9488\u6570\u636e\u5c31\u6ca1\u6709\u8fd9\u6837\u7684\u5fc5\u8981\u6027\u4e86\u3002\u56e0\u6b64\uff0c\u8bf8\u5982\u6570\u5b57\u3001\u5e03\u5c14\u503c\u3001\u5b57\u7b26\u3001\u5f15\u7528\u7b49\u7c7b\u578b\u9ed8\u8ba4\u90fd\u5b9e\u73b0\u4e86",(0,r.kt)("inlineCode",{parentName:"p"},"Copy Trait"),"\uff0c\u56e0\u6b64\u5728\u8fdb\u884c\u8d4b\u503c\u7b49\u64cd\u4f5c\u7684\u65f6\u5019\u4f1a\u6267\u884cCopy\u64cd\u4f5c\uff0c\u800cCopy\u5b9e\u9645\u4e0a\u975e\u5e38\u7c7b\u4f3c\u4f20\u7edf\u610f\u4e49\u7684\u6d45\u62f7\u8d1d\u3002"),(0,r.kt)("p",null,"\u800c\u50cf\u7ed3\u6784\u4f53\u9ed8\u8ba4\u662f\u6ca1\u6709\u5b9e\u73b0",(0,r.kt)("inlineCode",{parentName:"p"},"Copy Trait"),"\u7684\uff0c\u5982\u679c\u60f3\u8981\u5b9e\u73b0",(0,r.kt)("inlineCode",{parentName:"p"},"Copy Trait"),"\u9700\u8981\u5148\u786e\u4fdd\u6bcf\u4e2a\u5c5e\u6027\u90fd\u5b9e\u73b0\u4e86",(0,r.kt)("inlineCode",{parentName:"p"},"Copy Trait"),"\u3002"),(0,r.kt)("p",null,"\u800c\u50cf\u6570\u7ec4\u548c\u5143\u7956\u8fd9\u6837\u7684\u590d\u5408\u7c7b\u578b\u4e5f\u6bd4\u8f83\u7279\u6b8a\uff0c\u5f53\u5b83\u4eec\u7684\u6bcf\u4e00\u9879\u90fd\u5b9e\u73b0\u4e86",(0,r.kt)("inlineCode",{parentName:"p"},"Copy Trait"),"\u7684\u65f6\u5019\u53ef\u4ee5\u89c6\u4e3a\u5b83\u672c\u8eab\u4e5f\u5b9e\u73b0\u4e86",(0,r.kt)("inlineCode",{parentName:"p"},"Copy Trait"),"\uff0c\u53cd\u4e4b\u5219\u89c6\u4e3a\u6ca1\u6709\u5b9e\u73b0",(0,r.kt)("inlineCode",{parentName:"p"},"Copy Trait")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'let tuple = (1, 2);\nlet tuple2 = tuple;\n\nprintln!("{:?}", tuple); // ok\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'let tuple = (1, 2, String::from("akara"));\nlet tuple2 = tuple;\n\nprintln!("{:?}", tuple); // error\n')),(0,r.kt)("h3",{id:"clone"},"Clone"),(0,r.kt)("p",null,"Move\u3001Copy\u90fd\u662f\u6839\u636e\u662f\u5426\u5b9e\u73b0",(0,r.kt)("inlineCode",{parentName:"p"},"Copy Trait"),"\u800c\u53ef\u80fd\u9ed8\u8ba4\u6267\u884c\u7684\u64cd\u4f5c\uff0c\u5bf9\u4e8e\u5b9e\u73b0\u4e86",(0,r.kt)("inlineCode",{parentName:"p"},"Clone Trait"),"\u7684\u7c7b\u578b\u6211\u4eec\u53ef\u4ee5\u624b\u52a8\u6765\u8c03\u7528",(0,r.kt)("inlineCode",{parentName:"p"},"clone"),"\u65b9\u6cd5\uff0c\u5728\u62f7\u8d1d\u6808\u5185\u5b58\u7684\u540c\u65f6\u4e5f\u4f1a\u62f7\u8d1d\u5806\u5185\u5b58\u7684\u6570\u636e\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f\u6211\u4eec\u7406\u89e3\u4e2d\u7684\u6df1\u62f7\u8d1d\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'let s = String::from("akara");\nlet ss = s.clone();\n')),(0,r.kt)("h3",{id:"\u5f15\u7528borrow"},"\u5f15\u7528\uff08borrow\uff09"),(0,r.kt)("p",null,"Rust\u901a\u8fc7Move\u6765\u5b9e\u73b0\u6240\u6709\u6743\u7684\u6982\u5ff5\uff0c\u4f46\u662f\u8fd9\u79cd\u8303\u5f0f\u4e5f\u5e76\u4e0d\u662f\u5b8c\u7f8e\u7684\uff0c\u5f53\u6211\u4eec\u628a\u53c2\u6570\uff08\u5982\u667a\u80fd\u6307\u9488\uff09\u4f20\u5165\u51fd\u6570\u65f6\u4f1a\u53d1\u751f\u6240\u6709\u6743\u8f6c\u79fb\uff0c\u4e3a\u4e86\u540e\u7eed\u80fd\u5728\u51fd\u6570\u5916\u7ee7\u7eed\u4f7f\u7528\u6570\u636e\uff0c\u6211\u4eec\u53c8\u9700\u8981\u624b\u52a8\u628a\u53c2\u6570\u8fd4\u56de\u5230\u51fd\u6570\u5916\uff0c\u8fd9\u6837\u4f7f\u7528\u8d77\u6765\u53ef\u80fd\u4f1a\u6bd4\u8f83\u7e41\u7410\uff0c\u5982\u4ee5\u4e0b\u4ee3\u7801\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'fn main() {\n    let A = String::from("hello");\n\n    let B = test(A);\n    B.as_bytes();\n}\n\nfn test(C: String) -> String {\n    println!("{:?}", C.as_bytes());\n    C\n}\n')),(0,r.kt)("p",null,"\u56e0\u6b64Rust\u5f15\u5165\u4e86",(0,r.kt)("strong",{parentName:"p"},"\u5f15\u7528"),"\u7684\u6982\u5ff5\u6765\u89e3\u51b3\u8fd9\u6837\u7684\u95ee\u9898\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'let A: String = String::from("hello");\nlet B: &String = &A;\n')),(0,r.kt)("p",null,"\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u901a\u8fc7",(0,r.kt)("inlineCode",{parentName:"p"},"&A"),"\u6765\u521b\u5efa\u5f15\u7528\uff0c\u5b9e\u9645\u4e0a",(0,r.kt)("inlineCode",{parentName:"p"},"&"),"\u7684\u4f5c\u7528\u5c31\u662f\u53d6\u5730\u5740\uff0c\u5373\u53d6\u53d8\u91cfA\u7684\u5185\u5b58\u5730\u5740\uff0c\u6211\u4eec\u4f1a\u5c06\u5176\u4fdd\u5b58\u5728\u53d8\u91cfB\u7684\u4f4d\u7f6e\u4e2d\uff0c\u4ece\u800c\u53ef\u4ee5\u901a\u8fc7\u53d8\u91cfB\u6765\u95f4\u63a5\u7684\u8bfb\u6216\u5199A\u6240\u6307\u5411\u7684\u5806\u5185\u5b58\u6570\u636e\u3002\u8fd9\u6837\u7684\u64cd\u4f5c\u4e5f\u88ab\u79f0\u4e3a",(0,r.kt)("inlineCode",{parentName:"p"},"borrow"),"\u3002"),(0,r.kt)("p",null,"\u4e0a\u8ff0\u5b9e\u9645\u4e0a\u521b\u5efa\u7684\u662f",(0,r.kt)("inlineCode",{parentName:"p"},"immutable"),"\u5f15\u7528\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u901a\u8fc7",(0,r.kt)("inlineCode",{parentName:"p"},"&mut"),"\u6765\u521b\u5efa",(0,r.kt)("inlineCode",{parentName:"p"},"mutable "),"\u5f15\u7528\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'let mut A: String = String::from("hello");\nlet B = &mut A;\nB.push_str(" world");\nprintln!("{:?}", A);\n')),(0,r.kt)("h3",{id:"\u751f\u547d\u5468\u671flifetimes"},"\u751f\u547d\u5468\u671f\uff08LifeTimes\uff09"),(0,r.kt)("p",null,"\u5f15\u7528\u7684\u751f\u547d\u5468\u671f\uff0c\u6307\u7684\u662f\u4ece\u8be5\u5f15\u7528\u88ab\u521b\u5efa\uff08\u6216\u8005\u53eb",(0,r.kt)("inlineCode",{parentName:"p"},"borrow"),"\uff09\u5230\u6700\u540e\u4e00\u6b21\u7528\u5230\u7684\u8fd9\u6bb5\u533a\u95f4\u3002"),(0,r.kt)("p",null,"\u901a\u8fc7\u5f15\u5165\u6240\u6709\u6743\u548c\u5f15\u7528\u7684\u6982\u5ff5\uff0cRust\u4e2d\u5b9e\u9645\u4e0a\u4f1a\u5b58\u5728\u591a\u4e2a\u5f15\u7528\u6307\u5411\u540c\u4e00\u5757\u5185\u5b58\uff0c\u53ea\u4e0d\u8fc7\u53ea\u6709Owner\u53d8\u91cf\u62e5\u6709\u8fd9\u5757\u5185\u5b58\u7684\u6240\u6709\u6743\uff0c\u5f53\u8be5\u53d8\u91cf\u79bb\u5f00\u4f5c\u7528\u57df\u65f6\u4f1a\u81ea\u52a8\u91ca\u653e\u5bf9\u5e94\u7684\u5185\u5b58\u3002\u6240\u4ee5\u5728\u7f16\u8bd1\u65f6Rust\u7f16\u8bd1\u5668\u4f1a\u901a\u8fc7Borrow Checker\u6765\u5bf9\u6240\u6709\u5f15\u7528\u7684\u751f\u547d\u5468\u671f\u8fdb\u884c\u68c0\u67e5\uff0cBorrow Checker\u6709\u51e0\u6761\u89c4\u5219\uff0c\u5176\u4e2d\u4e00\u6761\u6700\u663e\u800c\u6613\u89c1\u7684\u5c31\u662f\u5f15\u7528\u7684\u751f\u547d\u5468\u671f\u5e94\u8be5\u5728\u5bf9\u5e94\u6307\u9488\u7684\u751f\u547d\u5468\u671f\u8303\u56f4\u5185\u3002"),(0,r.kt)("p",null,"\u6bd4\u5982\u4ee5\u4e0b\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u521b\u5efa\u4e86\u6307\u9488",(0,r.kt)("inlineCode",{parentName:"p"},"s"),"\uff0c\u540c\u65f6\u521b\u5efa\u4e86\u4e00\u4e2a",(0,r.kt)("inlineCode",{parentName:"p"},"s"),"\u7684\u5f15\u7528\u8d4b\u503c\u7ed9",(0,r.kt)("inlineCode",{parentName:"p"},"r"),"\uff0c\u5f53\u5757\u7ea7\u4f5c\u7528\u57df\u7ed3\u675f\u65f6",(0,r.kt)("inlineCode",{parentName:"p"},"s"),"\u53d8\u91cf\u91ca\u653e\uff0c\u6211\u4eec\u4e0d\u80fd\u518d\u901a\u8fc7",(0,r.kt)("inlineCode",{parentName:"p"},"r"),"\u53bb\u83b7\u53d6\u8be5\u5185\u5b58\uff0c\u8fd9\u7c7b\u95ee\u9898\u4f1a\u5728\u7f16\u8bd1\u65f6\u5c31\u63d0\u524d\u66b4\u9732\u51fa\u6765\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'fn main() {\n    let r;\n    {\n        let s = String::from("hello");\n        r = &s; // \u62a5\u9519\n    }\n    r.as_bytes();\n}\n')),(0,r.kt)("h3",{id:"generic-lifetimes-parameter"},"Generic Lifetimes Parameter"),(0,r.kt)("p",null,"Rust\u4e2d\u7684\u6cdb\u578b\u9664\u4e86\u5e38\u89c1\u7684\u7c7b\u578b\u53c2\u6570\uff08",(0,r.kt)("inlineCode",{parentName:"p"},"type parameter"),"\uff0c\u5982",(0,r.kt)("inlineCode",{parentName:"p"},"T"),"\uff09\u8fd8\u652f\u6301\u4e00\u4e2a\u7279\u6b8a\u7684\u53c2\u6570\uff0c\u53eb\u505a\u751f\u547d\u5468\u671f\u53c2\u6570\uff08",(0,r.kt)("inlineCode",{parentName:"p"},"lifetimes parameter"),"\uff0c\u5982",(0,r.kt)("inlineCode",{parentName:"p"},"'a"),"\uff09\u3002\u7c7b\u578b\u53c2\u6570",(0,r.kt)("inlineCode",{parentName:"p"},"T"),"\u7528\u6765\u5b9e\u73b0\u591a\u4e2a\u53c2\u6570\u548c\u8fd4\u56de\u503c\u7684\u7c7b\u578b\u7684\u663e\u5f0f\u5173\u8054\uff0c\u5bf9\u5e94\u7684\u751f\u547d\u5468\u671f\u53c2\u6570",(0,r.kt)("inlineCode",{parentName:"p"},"'a"),"\u7528\u6765\u5b9e\u73b0\u591a\u4e2a\u53c2\u6570\u548c\u8fd4\u56de\u503c\u7684\u751f\u547d\u5468\u671f\u7684\u663e\u5f0f\u5173\u8054\u3002"),(0,r.kt)("p",null,"\u6211\u4eec\u4e4b\u524d\u63d0\u5230\u8fc7\u5728\u7f16\u8bd1\u65f6Rust\u9700\u8981\u901a\u8fc7Borrow Checker\u6765\u68c0\u67e5\u6240\u6709\u5f15\u7528\u7684\u751f\u547d\u5468\u671f\u662f\u5426\u90fd\u662f\u6709\u6548\u7684\uff0c\u4ee5\u4e0b\u65b9\u7684\u4ee3\u7801\u4e3e\u4f8b\uff0c\u51fd\u6570",(0,r.kt)("inlineCode",{parentName:"p"},"longest"),"\u63a5\u6536\u4e24\u4e2a\u5f15\u7528\u4f5c\u4e3a\u53c2\u6570\uff0c\u5e76\u4f1a\u5c06\u5176\u4e2d\u7684\u4e00\u4e2a\u5f15\u7528\u4f5c\u4e3a\u51fd\u6570\u8fd4\u56de\u503c\u3002\u5728\u4f7f\u7528\u8be5\u51fd\u6570\u7684\u65f6\u5019\uff0c\u6211\u4eec\u65e0\u6cd5\u786e\u5b9a\u786e\u5b9a",(0,r.kt)("inlineCode",{parentName:"p"},"longest"),"\u8fd4\u56de\u503c\u7684\u751f\u547d\u5468\u671f\uff0c\u56e0\u6b64\u65e0\u6cd5\u901a\u8fc7Borrow Checker\u7684\u68c0\u67e5\u3002\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u5728\u5b9a\u4e49",(0,r.kt)("inlineCode",{parentName:"p"},"longest"),"\u51fd\u6570\u7684\u65f6\u5019\u6211\u4eec\u9700\u8981\u901a\u8fc7",(0,r.kt)("inlineCode",{parentName:"p"},"lifetimes parameter"),"\u663e\u5f0f\u7684\u5efa\u7acb\u53c2\u6570\u548c\u8fd4\u56de\u503c\u7684\u751f\u547d\u5468\u671f\u7684\u8054\u7cfb\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'fn main() {\n    let string1 = String::from("abcd");\n    let string2 = "xyz";\n\n    let result = longest(string1.as_str(), string2);\n    println!("The longest string is {}", result);\n}\n\nfn longest(x: &str, y: &str) -> &str { // \u62a5\u9519\n    if x.len() > y.len() {\n        x\n    } else {\n        y\n    }\n}\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},"fn longest<'a>(x: &'a str, y: &'a str) -> &'a str { // \u6b63\u786e\n    if x.len() > y.len() {\n        x\n    } else {\n        y\n    }\n}\n")),(0,r.kt)("h3",{id:"static-lifetimes"},"Static Lifetimes"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'let s: &str = "hello world"\n')),(0,r.kt)("p",null,"\u6240\u6709\u7684\u5b57\u7b26\u4e32\u5b57\u9762\u91cf\u90fd\u662f\u76f4\u63a5\u5b58\u50a8\u5728\u7a0b\u5e8f\u7684\u4e8c\u8fdb\u5236\u5f53\u4e2d\uff0c\u5728\u6574\u4e2a\u7a0b\u5e8f\u7684\u4efb\u4f55\u65f6\u5019\u90fd\u662f\u53ef\u7528\u7684\uff0c\u56e0\u6b64\u5b83\u4eec\u7684\u5f15\u7528\u7684\u751f\u547d\u5468\u671f\u88ab\u7528",(0,r.kt)("inlineCode",{parentName:"p"},"'static"),"\u6807\u8bc6\uff0c\u8868\u793a\u8fd9\u4e2a\u5f15\u7528\u53ef\u4ee5\u5728\u6574\u4e2a\u7a0b\u5e8f\u7684\u5468\u671f\u4e2d\u5b58\u5728\u3002"),(0,r.kt)("h2",{id:"\u667a\u80fd\u6307\u9488smart-pointers"},"\u667a\u80fd\u6307\u9488\uff08Smart Pointers\uff09"),(0,r.kt)("p",null,"\u667a\u80fd\u6307\u9488\u6ca1\u6709\u5341\u5206\u660e\u786e\u7684\u5b9a\u4e49\uff0c\u4e0d\u8fc7\u4e00\u822c\u53ef\u4ee5\u628a\u5b9e\u73b0\u4e86",(0,r.kt)("inlineCode",{parentName:"p"},"Deref"),"\u548c",(0,r.kt)("inlineCode",{parentName:"p"},"Drop"),"\u8fd9\u4e24\u4e2aTrait\u7684\u7ed3\u6784\u4f53\u89c6\u4e3a\u667a\u80fd\u6307\u9488\u3002\u5e38\u89c1\u7684\u667a\u80fd\u6307\u9488\u5305\u62ecString\u3001Vec\u3001HashMap\u3001Box\u3001Rc\u3001RefCell\u7b49\u3002"),(0,r.kt)("h3",{id:"deref"},(0,r.kt)("em",{parentName:"h3"},"Deref")),(0,r.kt)("p",null,"\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7",(0,r.kt)("inlineCode",{parentName:"p"},"&"),"\u64cd\u4f5c\u7b26\u6765\u521b\u5efa\u5f15\u7528\uff0c\u540c\u7406\u4e5f\u53ef\u4ee5\u901a\u8fc7\u89e3\u5f15\u7528\u64cd\u4f5c\u7b26",(0,r.kt)("inlineCode",{parentName:"p"},"*"),"\u6765\u83b7\u53d6\u5f15\u7528\u5730\u5740\u6240\u5bf9\u5e94\u7684\u6570\u636e\uff0c\u5982\u4ee5\u4e0b\u4f8b\u5b50\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},"fn main() {\n    let x = 5;\n    let y = &x;\n\n    assert_eq!(5, x);\n    assert_eq!(5, *y);\n}\n")),(0,r.kt)("p",null,"\u800c\u5bf9\u4e8e\u7ed3\u6784\u4f53\u6765\u8bf4\uff0c\u53ef\u4ee5\u901a\u8fc7\u5b9e\u73b0",(0,r.kt)("inlineCode",{parentName:"p"},"Deref Trait"),"\u6765\u6a21\u62df\u5f15\u7528\u7684\u8be5\u884c\u4e3a\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'let a = Rc::new(Box::new(String::from("akara")));\nlet b: &String = &**a;\n')),(0,r.kt)("h4",{id:"implicit-deref-coercions"},"Implicit Deref Coercions"),(0,r.kt)("p",null,"\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u4f1a\u8fdb\u884c\u9690\u5f0f\u89e3\u5f15\u7528\uff0c\u5982\u4ee5\u4e0b\u4f8b\u5b50\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'fn test(name: &str) {}\n\nfn main() {\n  let a = Rc::new(Box::new(String::from("akara")));\n  test(&a); // \u7528\u4f8b1\n  a.as_bytes() // \u7528\u4f8b2\n}\n')),(0,r.kt)("h3",{id:"drop"},(0,r.kt)("em",{parentName:"h3"},"Drop")),(0,r.kt)("p",null,"\u901a\u8fc7\u5b9e\u73b0Drop Trait\u53ef\u4ee5\u81ea\u5b9a\u4e49\u53d8\u91cf\u79bb\u5f00\u4f5c\u7528\u57df\u65f6\u7684\u884c\u4e3a\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'struct CustomSmartPointer {\n    data: String,\n}\n\nimpl Drop for CustomSmartPointer {\n    fn drop(&mut self) {\n        println!("Dropping CustomSmartPointer with data `{}`!", self.data);\n    }\n}\n')),(0,r.kt)("h3",{id:"boxt"},(0,r.kt)("inlineCode",{parentName:"h3"},"Box<T>")),(0,r.kt)("p",null,"\u7528\u6765\u5728\u5806\u5185\u5b58\u4e2d\u5206\u914d\u503c\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},"let ptr = Box::new(100);\n")),(0,r.kt)("h3",{id:"rct"},(0,r.kt)("inlineCode",{parentName:"h3"},"Rc<T>")),(0,r.kt)("p",null,"\u5728\u6240\u6709\u6743\u4e00\u7ae0\u4e2d\u6211\u4eec\u63d0\u5230\u8fc7\u4e0d\u5141\u8bb8\u591a\u4e2a\u53d8\u91cf\u62e5\u6709\u540c\u4e00\u5757\u5185\u5b58\u7684\u6240\u6709\u6743\uff0c\u56e0\u4e3a\u90a3\u4f1a\u5bfc\u81f4\u5185\u5b58\u591a\u6b21\u91ca\u653e\u7684\u9519\u8bef\uff0c\u8fd9\u4e2a\u9650\u5236\u5728\u5927\u90e8\u5206\u60c5\u51b5\u4e0b\u662f\u6ca1\u6709\u4ec0\u4e48\u95ee\u9898\u7684\u3002\u4f46\u5728\u67d0\u4e9b\u573a\u666f\u4e2d\uff0c\u7279\u522b\u662f\u5982\u94fe\u8868\u6216\u8005\u56fe\u8fd9\u6837\u7684\u6570\u636e\u7ed3\u6784\u5f53\u4e2d\uff0c\u6211\u4eec\u4f1a\u671f\u671b\u7740\u591a\u4e2a\u53d8\u91cf\u7684\u5730\u5740\u80fd\u591f\u6307\u5411\u540c\u4e00\u5757\u5185\u5b58\u7a7a\u95f4\uff0c\u5728\u8fd9\u79cd\u573a\u666f\u4e0b\u63a8\u8350\u4f7f\u7528\u5f15\u7528\u8ba1\u6570\u667a\u80fd\u6307\u9488",(0,r.kt)("inlineCode",{parentName:"p"},"Rc<T>"),"\u6765\u89e3\u51b3\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},"let ptr = Rc::new(Box::new(100));\nlet ptr2 = Rc::clone(&ptr);\n\nassert_eq!(**ptr2, 100);\n")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Rc<T>"),"\u5141\u8bb8\u540c\u4e00\u4efd\u6570\u636e\u6709\u591a\u4e2aOwner\uff0c\u4f46\u53ea\u7ed9\u4e86\u6211\u4eec\u8bfb\u53d6\u6570\u636e\u7684\u6743\u9650\uff0c\u5982\u4ee5\u4e0b\u4f8b\u5b50\u4f1a\u62a5\u9519\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},"let ptr = Rc::new(Box::new(100));\n*ptr = Box::new(200)\n// cannot assign to data in an `Rc` trait `DerefMut` is required to modify through a dereference, but it is not implemented for `Rc<Box<i32>>`\n")),(0,r.kt)("h3",{id:"refcellt"},(0,r.kt)("inlineCode",{parentName:"h3"},"RefCell<T>")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"RefCell<T>"),"\u9075\u5faa\u5185\u90e8\u53ef\u53d8\u6027\uff08",(0,r.kt)("em",{parentName:"p"},"Interior mutability"),"\uff09\u7684\u8bbe\u8ba1\u6a21\u5f0f\uff0c\u5b83\u7684\u5185\u90e8\u4f7f\u7528\u4f7f\u7528\u4e86",(0,r.kt)("inlineCode",{parentName:"p"},"unsafe"),"\u7684\u4ee3\u7801\u6765\u7ed5\u8fc7Rust\u7684\u9650\u5236\u3002\u5373\u4f7f\u53d8\u91cf\u88ab\u58f0\u660e\u4e3a",(0,r.kt)("inlineCode",{parentName:"p"},"immutable"),"\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u901a\u8fc7",(0,r.kt)("inlineCode",{parentName:"p"},"RefCell"),"\u6765\u4fee\u6539\u90e8\u5206\u6570\u636e\u3002"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"\u4f8b\u5b50\u4e00\uff1a\ud83c\udf30")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},"let ptr = Box::new(RefCell::new(100)); // \u6ca1\u6709mut\nlet mut ptr2 = ptr.borrow_mut();\n*ptr2 = 200;\n\nassert_eq!(200, *ptr2);\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"\u4f8b\u5b50\u4e8c\uff1a\ud83c\udf30")),(0,r.kt)("p",null,"\u65e2\u7136",(0,r.kt)("inlineCode",{parentName:"p"},"Rc<T>"),"\u53ea\u80fd\u63d0\u4f9b",(0,r.kt)("inlineCode",{parentName:"p"},"immutable"),"\u5f15\u7528\uff0c\u800c",(0,r.kt)("inlineCode",{parentName:"p"},"RefCell"),"\u53c8\u80fd\u591f\u5b9e\u73b0\u5185\u90e8\u7684\u53ef\u53d8\uff0c\u56e0\u6b64\u8fd9\u4e24\u4e2a\u667a\u80fd\u6307\u9488\u7ecf\u5e38\u88ab\u653e\u5728\u4e00\u8d77\u642d\u914d\u4f7f\u7528\u3002\u53e6\u5916\uff0c\u5728\u591a\u7ebf\u7a0b\u7684\u573a\u666f\u4e0b\u8fd9\u4e24\u4e2a\u667a\u80fd\u6307\u9488\u5206\u522b\u5bf9\u5e94",(0,r.kt)("inlineCode",{parentName:"p"},"Arc<T>"),"\u548c",(0,r.kt)("inlineCode",{parentName:"p"},"Mutex<T>")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},"let ptr1 = Rc::new(RefCell::new(People {\n        age: 100\n}));\nlet ptr2 = Rc::clone(&ptr1);\n(*ptr1.borrow_mut()).age = 300;\n\nassert_eq!(300, ptr2.borrow().age);\n")),(0,r.kt)("h2",{id:"\u96c6\u5408collections"},"\u96c6\u5408\uff08Collections\uff09"),(0,r.kt)("h3",{id:"vector"},"Vector"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Vec"),"\u662f\u957f\u5ea6\u53ef\u53d8\uff0c\u53c2\u6570\u7c7b\u578b\u76f8\u540c\u7684\u96c6\u5408\u3002\u4e5f\u53ef\u4ee5\u901a\u8fc7",(0,r.kt)("inlineCode",{parentName:"p"},"Vec"),"\u5b58\u679a\u4e3e\uff0c\u6765\u95f4\u63a5\u5b9e\u73b0\u957f\u5ea6\u53ef\u53d8\uff0c\u7c7b\u578b\u4e0d\u540c\u7684\u96c6\u5408"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'fn main() {\n  let mut value: Vec<i32> = Vec::new();\n  value.push(1);\n  value.push(2);\n\n  let mut value2 = vec![1, 2, 3]; // macro\n\n  let a: &mut i32 = &mut value2[0];\n  *a = 4;\n  println!("{}", a);\n\n  let b: Option<&i32> = value2.get(1);\n  if let Some(x) = b {\n      println!("{}", x);\n  }\n\n\n\n  for i in &mut value2 {\n      *i = 20;\n      println!("{}", i);\n  }\n\n  // ---\n\n\n  fn largest(list: &[i32]) -> i32 {\n      let mut largest = list[0];\n\n      for &item in list { // 18\u7ae0,\u6a21\u5f0f\u5339\u914d\n          if item > largest {\n              largest = item;\n          }\n      }\n\n      largest\n  }\n}\n')),(0,r.kt)("h4",{id:"\u5e38\u7528\u65b9\u6cd5"},"\u5e38\u7528\u65b9\u6cd5"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},"push pop insert remove clear append split_off retain truncate drain \n")),(0,r.kt)("h3",{id:"string"},"String"),(0,r.kt)("p",null,"\u9700\u8981\u6ce8\u610f\u7684\u662f",(0,r.kt)("inlineCode",{parentName:"p"},"String"),"\u5e76\u4e0d\u652f\u6301\u76f4\u63a5\u901a\u8fc7\u7d22\u5f15\u8fdb\u884c\u53d6\u503c"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'fn main() {\n  let mut s = String::from("hello");\n  s.push_str(" world");\n  s.push(\'!\'); // char\u662f\u5355\u5f15\u53f7\n  println!("{}", s); \n}\n\n')),(0,r.kt)("h3",{id:"hashmap"},"HashMap"),(0,r.kt)("p",null,"\u867d\u7136\u90fd\u5728\u6807\u51c6\u5e93\u5f53\u4e2d\uff0c\u4f46\u662f\u7531\u4e8e\u4e0d\u50cf",(0,r.kt)("inlineCode",{parentName:"p"},"Vec"),"\u3001",(0,r.kt)("inlineCode",{parentName:"p"},"String"),"\u4f7f\u7528\u7684\u90a3\u4e48\u9891\u7e41\uff0c\u56e0\u6b64",(0,r.kt)("inlineCode",{parentName:"p"},"HashMap"),"\u5e76\u6ca1\u6709\u88ab",(0,r.kt)("inlineCode",{parentName:"p"},"preclude"),"\uff0c\u6240\u4ee5\u4f7f\u7528\u7684\u65f6\u5019\u9700\u8981\u901a\u8fc7",(0,r.kt)("inlineCode",{parentName:"p"},"use"),"\u624b\u52a8\u5f15\u5165"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'use std::collections::HashMap;\n\nfn main() {\n  let mut scores = HashMap::new();\n  scores.insert(String::from("Blue"), 10);\n  scores.insert(String::from("Yellow"), 50);\n\n  for (key, value) in &scores {\n      println!("{}: {}", key, value);\n  }\n}\n\n')),(0,r.kt)("h3",{id:"range"},"Range"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},"use core::ops::Range;\n\nlet v: Vec<i32> = (1..4).into_iter().map( |x| x * x).collect();\n")),(0,r.kt)("h2",{id:"\u8fed\u4ee3\u5668iteration"},"\u8fed\u4ee3\u5668\uff08iteration\uff09"),(0,r.kt)("p",null,"\u5e38\u89c1\u7684\u96c6\u5408\u7c7b\u578b\uff0c\u5982",(0,r.kt)("em",{parentName:"p"},"Vector"),"\u90e8\u7f72\u7684",(0,r.kt)("inlineCode",{parentName:"p"},".iter()"),"\u3001",(0,r.kt)("inlineCode",{parentName:"p"},".into_iter()"),"\u7b49\u65b9\u6cd5\u5c06\u4f1a\u8fd4\u56de\u8fed\u4ee3\u5668\u5bf9\u8c61\uff0c\u8fed\u4ee3\u5668\u90fd\u5b9e\u73b0\u4e86",(0,r.kt)("em",{parentName:"p"},"Iterator"),"\u8fd9\u4e2a",(0,r.kt)("em",{parentName:"p"},"trait"),"\uff0c\u5373\u53ef\u4ee5\u901a\u8fc7\u4e0d\u65ad\u8c03\u7528",(0,r.kt)("inlineCode",{parentName:"p"},"next"),"\u65b9\u6cd5\u8bbf\u95ee\u96c6\u5408\u4e2d\u7684\u5143\u7d20\u3002"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},".iter()"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},".iter_mut()"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},".into_iter()")))),(0,r.kt)("h3",{id:"consuming-adaptors"},(0,r.kt)("em",{parentName:"h3"},"consuming adaptors")),(0,r.kt)("p",null,"\u5728\u5185\u90e8\u8c03\u7528",(0,r.kt)("inlineCode",{parentName:"p"},"next"),"\u65b9\u6cd5\u7684\u65b9\u6cd5\u4e5f\u88ab\u79f0\u4e3a",(0,r.kt)("em",{parentName:"p"},"consuming adaptor"),"\uff0c\u5982",(0,r.kt)("inlineCode",{parentName:"p"},"sum"),"\u65b9\u6cd5"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'fn main() {\n    let v = vec![1, 2, 3];\n    let sum: u32 = v.iter().sum();\n    println!("{}", sum);\n}\n')),(0,r.kt)("h3",{id:"iterator-adaptors"},(0,r.kt)("em",{parentName:"h3"},"Iterator adaptors")),(0,r.kt)("p",null,"\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684\u8fed\u4ee3\u5668\u7684\u65b9\u6cd5\u4e5f\u88ab\u79f0\u4e3a",(0,r.kt)("em",{parentName:"p"},"iterator adaptor"),"\uff0c\u5982",(0,r.kt)("inlineCode",{parentName:"p"},"map"),"\u65b9\u6cd5"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'fn main() {\n    let v = vec![1, 2, 3];\n    let sum: u32 = v.iter().map(|x| 2 * x).sum();\n    println!("{}", sum);\n}\n')),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://stackoverflow.com/questions/65766866/why-the-closure-passed-to-map-does-not-take-a-reference-while-the-one-passed-t"},"https://stackoverflow.com/questions/65766866/why-the-closure-passed-to-map-does-not-take-a-reference-while-the-one-passed-t")," "),(0,r.kt)("h2",{id:"\u6cdb\u578bgeneric"},"\u6cdb\u578b\uff08Generic\uff09"),(0,r.kt)("p",null,"Rust\u63d0\u4f9b\u4e86\u5bf9\u7ed3\u6784\u4f53\u3001\u679a\u4e3e\u3001\u51fd\u6570\u3001\u7279\u5f81\u7684\u6cdb\u578b\u652f\u6301\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},"struct People<K, V> {\n    k: K,\n    v: V,\n}\n\nimpl People<u32, u32> {\n    fn test1(&self) {} \n}\n\nimpl<K> People<K, bool> {\n    fn test2(&self) {} \n}\n\nimpl<K, V> People<K, V> {\n    fn test3(&self) {} \n}\n\npub fn main() {\n        let p = People { k: 1, v: 1 };\n    p.test1();\n        p.test2(); // error\n    p.test3();\n\n    let p2 = People { k: true, v: false };\n    p2.test1(); // error\n    p2.test2();\n    p2.test3();\n}\n")),(0,r.kt)("h3",{id:"\u9759\u6001\u5206\u53d1"},"\u9759\u6001\u5206\u53d1"),(0,r.kt)("p",null,"Rust\u4e2d\u4f7f\u7528\u6cdb\u578b\u5e76\u4e0d\u4f1a\u7ed9\u8fd0\u884c\u65f6\u5e26\u6765\u4efb\u4f55\u989d\u5916\u7684\u5f00\u9500\uff0c\u8fd9\u4f9d\u8d56\u4e8eRust\u5728\u7f16\u8bd1\u65f6\u5bf9\u6240\u6709\u6cdb\u578b\u7c7b\u578b\u8fdb\u884c",(0,r.kt)("strong",{parentName:"p"},"\u5355\u6001\u5316\uff08",(0,r.kt)("em",{parentName:"strong"},"monomorphization"),"\uff09"),"\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},"enum Option<T> {\n  Some(T);\n  None;\n}\n\nfn main() {\n        let integer = Some(5);\n        let float = Some(5.0);\n}\n")),(0,r.kt)("p",null,"\u4ee5\u4e0a\u6e90\u7801\u4f1a\u88ab\u7f16\u8bd1\u6210\u4ee5\u4e0b\u4ee3\u7801\uff0c\u8fd9\u4e5f\u88ab\u79f0\u4e3a",(0,r.kt)("strong",{parentName:"p"},"\u9759\u6001\u5206\u53d1\uff08",(0,r.kt)("em",{parentName:"strong"},"static dispatch"),"\uff09")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},"enum Option_i32 {\n    Some(i32),\n    None,\n}\n\nenum Option_f64 {\n    Some(f64),\n    None,\n}\n\nfn main() {\n    let integer = Option_i32::Some(5);\n    let float = Option_f64::Some(5.0);\n}\n")),(0,r.kt)("p",null,"\u5355\u6001\u5316\u6700\u5927\u7684\u597d\u5904\u662f\u96f6\u8fd0\u884c\u65f6\u5f00\u9500\uff0c\u4f46\u4e5f\u5b58\u5728\u7740\u5bf9\u5e94\u7684\u7f3a\u70b9\uff1a"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"\u4ea7\u7269\u4f53\u79ef\u589e\u5927"),(0,r.kt)("li",{parentName:"ol"},"\u7f16\u8bd1\u65f6\u95f4\u53d8\u957f")),(0,r.kt)("h2",{id:"\u7279\u5f81trait"},"\u7279\u5f81\uff08Trait\uff09"),(0,r.kt)("p",null,"\u9075\u4ece\u7740\u7ec4\u5408\u5927\u4e8e\u7ee7\u627f\u7684\u539f\u5219\uff0c\u5728Rust\u4e2d\u901a\u8fc7\u7ed3\u6784\u4f53\u800c\u4e0d\u662f\u4f20\u7edf\u7684\u7c7b\u6765\u7ec4\u7ec7\u6570\u636e\uff0c\u5e76\u5f15\u5165Trait\uff08\u7279\u5f81\uff09\u6765\u5b9e\u73b0\u903b\u8f91\u7684\u7ec4\u5408\u3002Trait\u7c7b\u4f3cJava\u4e2d\u7684Interface\uff0c\u4f46\u662f\u53ef\u4ee5\u63d0\u4f9b\u65b9\u6cd5\u7684\u9ed8\u8ba4\u5b9e\u73b0\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'struct People {\n    name: String,\n}\n\ntrait Test {\n    fn run(&self) { // \u53ef\u4ee5\u63d0\u4f9b\u9ed8\u8ba4\u5b9e\u73b0\n        println!("run") \n    } \n    fn get_name(&self) -> &str;\n}\n\nimpl Test for People {\n    fn get_name(&self) -> &str {\n        &self.name\n    }\n}\n\nfn main() {\n    let p = People {\n        name: String::from("akara"),\n    };\n    p.run();\n    println!("{}", p.get_name());\n}\n')),(0,r.kt)("h3",{id:"trait-bound"},"Trait Bound"),(0,r.kt)("p",null,"\u5728TypeScript\u4e2d\u6211\u4eec\u901a\u8fc7",(0,r.kt)("inlineCode",{parentName:"p"},"extends"),"\u6765\u8fdb\u884c\u6cdb\u578b\u7ea6\u675f\uff0c\u800c\u5728Rust\u4e2d\u4e5f\u63d0\u4f9b\u4e86\u7c7b\u4f3c\u7684\u8bed\u6cd5\u5b9e\u73b0\u5bf9\u6cdb\u578b\u53c2\u6570\u7684\u7ea6\u675f\uff0c\u8fd9\u88ab\u79f0\u4e3a",(0,r.kt)("em",{parentName:"p"},"Trait Bound"),"\u3002\u62ff\u4ee5\u4e0b\u4ee3\u7801\u4e3a\u4f8b\uff0c\u6211\u4eec\u7ea6\u675f\u6cdb\u578b\u53c2\u6570T\u5fc5\u987b\u5b9e\u73b0\u4e86",(0,r.kt)("em",{parentName:"p"},"Summary"),"\u8fd9\u4e2a",(0,r.kt)("em",{parentName:"p"},"Trait"),"\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'pub fn notify<T: Summary>(item: &T) {\n    println!("Breaking news! {}", item.summarize());\n}\n\n// \u8bed\u6cd5\u7cd6\npub fn notify(item: &impl Summary) {\n    println!("Breaking news! {}", item.summarize());\n}\n')),(0,r.kt)("p",null,"\u6211\u4eec\u8fd8\u53ef\u4ee5\u4f7f\u7528\u52a0\u53f7\u6765\u7ea6\u675f\u6cdb\u578b\u53c2\u6570\u5fc5\u987b\u540c\u65f6\u5b9e\u73b0\u4e86\u591a\u4e2a",(0,r.kt)("em",{parentName:"p"},"Trait")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},"pub fn notify<T: Summary + Display>(item: &T);\n  \npub fn notify(item: &(impl Summary + Display));\n")),(0,r.kt)("p",null,"\u5f53Trait Bound\u592a\u957f\u65f6\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528where\u5b50\u53e5\u6765\u4f18\u5316\u5199\u6cd5"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},"fn some_function<T: Display + Clone, U: Clone + Debug>(t: &T, u: &U) -> i32 {}\n  \nfn some_function<T, U>(t: &T, u: &U) -> i32\n    where T: Display + Clone,\n          U: Clone + Debug\n{}\n")),(0,r.kt)("h3",{id:"trait-object"},"Trait Object"),(0,r.kt)("p",null,"\u7531\u4e8eRust\u4e2d\u4f1a\u5728\u7f16\u8bd1\u9636\u6bb5\u5bf9\u6cdb\u578b\u8fdb\u884c\u9759\u6001\u5206\u53d1\uff0c\u4f46\u4e5f\u662f\u56e0\u4e3a\u8fd9\u4e2a\u7279\u6027\u4f7f\u5f97\u5176\u96be\u4ee5\u8868\u8fbe\u5f02\u6784\uff08",(0,r.kt)("em",{parentName:"p"},"heterogeneous"),"\uff09\u96c6\u5408\uff0c\u6bd4\u5982\u5bf9\u4e8e\u4ee5\u4e0b\u4ee3\u7801\u7f16\u8bd1\u5668\u4f1a\u629b\u51fa\u9519\u8bef\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},"struct Dog {\n    age: u32,\n}\n\nstruct Cat {\n    age: u32,\n}\n\ntrait Run {}\nimpl Run for Dog {}\nimpl Run for Cat {}\n\nfn main() {\n    test(vec![Dog { age: 10 }, Cat { age: 5 }]) // mismatched types expected struct `Dog`, found struct `Cat`\n}\n\nfn test<T: Run>(a: Vec<T>) {}\n")),(0,r.kt)("p",null,"\u901a\u5e38\u4e3a\u4e86\u8868\u8fbe\u8fd9\u79cd\u5f02\u6784\u96c6\u5408\uff0c\u6211\u4eec\u4f1a\u4f7f\u7528Trait Object\u6765\u5b9e\u73b0\uff0c\u5b9e\u9645\u4e0a\u8fd9\u662f\u4e00\u79cdDST\uff0c\u56e0\u6b64\u6211\u4eec\u5c06\u5728Dynamically Sized Type\u8fd9\u4e00\u7ae0\u8282\u8be6\u7ec6\u4ecb\u7ecdTrait Object\u7684\u4f7f\u7528\u3002"),(0,r.kt)("h3",{id:"trait-associated-type"},"Trait Associated Type"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},"struct People<K, V> {\n    k: K,\n    v: V,\n}\n\npub trait Skill {\n    type Item;\n\n    fn fire_ball(&self, hp: Self::Item, mp: Self::Item) {}\n    fn water_ball(&self, hp: Self::Item, mp: Self::Item) -> Self::Item;\n\n} \n\nimpl<K> Skill for People<K, u32> {\n    type Item = u32;\n    fn fire_ball(&self, hp: Self::Item, mp: Self::Item) {}\n    fn water_ball(&self, hp: Self::Item, mp: Self::Item) -> Self::Item {\n        self.v\n    }\n}\n")),(0,r.kt)("p",null,"\u5b9e\u9645\u4e0a\u529f\u80fd\u548c",(0,r.kt)("strong",{parentName:"p"},"Trait Generic"),"\u5dee\u4e0d\u592a\u591a\uff0c\u4ee5\u4e0b\u662f\u4e00\u4e2aTrait Generic\u7684\u4f8b\u5b50\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},"struct People<K, V> {\n    k: K,\n    v: V,\n}\n\npub trait Skill<Item> {\n    fn fire_ball(&self, hp: Item, mp: Item) {}\n    fn water_ball(&self, hp:Item, mp: Item) -> Item;\n} \n\nimpl<K, V: Copy> Skill<V> for People<K, V> {\n    fn fire_ball(&self, hp: V, mp: V) {}\n    fn water_ball(&self, hp: V, mp: V) -> V {\n        self.v\n    }\n}\n\npub fn main() {\n        let p = People { k: 1, v: 2 };\n    let p2 = p.water_ball(100, 200);\n}\n")),(0,r.kt)("h3",{id:"supertrait"},"SuperTrait"),(0,r.kt)("p",null,"\u5f53\u4e00\u4e2aTrait\u7684\u5b9e\u73b0\u9700\u8981\u4f9d\u8d56\u4e8e\u53e6\u4e00\u4e2aTrait\u65f6\uff0c\u6bd4\u5982\u5f53\u6211\u4eec\u9700\u8981\u5728Trait\u7684\u5b9e\u73b0\u4e2d\u4f7f\u7528\u53e6\u4e00\u4e2aTrait\u6240\u63d0\u4f9b\u7684\u65b9\u6cd5\uff0c\u6211\u4eec\u9700\u8981\u5728Trait\u7684\u58f0\u660e\u5b9a\u4e49\u4e2d\u7ed9\u51fa\u8fd9\u4e24\u4e2aTrait\u4e4b\u95f4\u7684\u5173\u8054\u5173\u7cfb\uff0c\u5199\u6cd5\u5982\u4e0b\u6240\u793a\uff0c\u8fd9\u6709\u70b9\u50cf\u5bf9\u4e8eTrait\u7684Trait Bounding\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},"trait Skill: Copy + Clone {}\n\n// \u7b49\u4ef7\u4e8e\ntrait Skill where Self: Copy + Clone {}\n")),(0,r.kt)("h2",{id:"dynamically-sized-type"},"Dynamically Sized Type"),(0,r.kt)("p",null,"\u5728Rust\u4e2d\u7edd\u5927\u90e8\u5206\u7c7b\u578b\u6240\u5360\u636e\u7684\u7a7a\u95f4\u662f\u5728\u7f16\u8bd1\u65f6\u5df2\u77e5\u7684\uff0c\u76f8\u5bf9\u5e94\u7684\u7f16\u8bd1\u65f6\u5927\u5c0f\u672a\u77e5\u7684\u7c7b\u578b\u901a\u5e38\u88ab\u79f0\u4e4b\u4e3a",(0,r.kt)("strong",{parentName:"p"},"Dynamically Sized Type\uff08DST\uff09"),"\uff0c\u6216\u8005\u53ebUnsized Type\u3002",(0,r.kt)("strong",{parentName:"p"},"\u5207\u7247\u7c7b\u578b\uff08Slice\uff09"),"\u548c",(0,r.kt)("strong",{parentName:"p"},"Trait Object"),"\u90fd\u5c5e\u4e8e\u8fd9\u79cd\u60c5\u51b5\u3002\u5e76\u4e14\u7531\u4e8e\u5728\u7f16\u8bd1\u65f6\u5927\u5c0f\u672a\u77e5\uff0c\u56e0\u6b64\u901a\u5e38\u6211\u4eec\u4e0d\u80fd\u76f4\u63a5\u5728\u4ee3\u7801\u4e2d\u4f7f\u7528\u8fd9\u4e9b\u7c7b\u578b\uff0c\u800c\u662f\u9700\u8981",(0,r.kt)("strong",{parentName:"p"},"\u901a\u8fc7\u5f15\u7528"),"\u6765\u95f4\u63a5\u64cd\u4f5c\u3002"),(0,r.kt)("h3",{id:"slice"},"Slice"),(0,r.kt)("p",null,"\u901a\u5e38\u53ef\u4ee5\u5bf9String\u3001Vec\u3001\u6570\u7ec4\u8fdb\u884c\u5207\u7247\u64cd\u4f5c\u6765\u83b7\u5f97\u5bf9\u5e94\u7684\u5207\u7247\u7c7b\u578b\uff0c\u5207\u7247\u7684\u7c7b\u578b\u7528",(0,r.kt)("inlineCode",{parentName:"p"},"[T]"),"\u8868\u793a\uff0c\u5207\u7247\u5f15\u7528\u7684\u7c7b\u578b\u7528",(0,r.kt)("inlineCode",{parentName:"p"},"&[T]"),"\u8868\u793a\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},"let v1 = vec![1, 2, 3, 4];\nlet v2: &[i32] = &v1[..]; // slice\n\nlet a1 = [1, 2, 3, 4];\nlet a2: &[i32] = &a1[..]; // slice\n")),(0,r.kt)("p",null,"\u800cString\u5bf9\u5e94\u7684\u5207\u7247\u5e76\u4e0d\u662f\u7528",(0,r.kt)("inlineCode",{parentName:"p"},"[String]"),"\u8868\u793a\uff0c\u800c\u662f\u7528",(0,r.kt)("inlineCode",{parentName:"p"},"str"),"\u6765\u8868\u793a\uff0c\u5bf9\u5e94\u7684String\u7684\u5207\u7247\u5f15\u7528\u5219\u662f\u901a\u8fc7",(0,r.kt)("inlineCode",{parentName:"p"},"&str"),"\u6765\u8fdb\u884c\u8868\u793a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'let s1 = String::from("hello");\nlet s2: &str = &s1[..];\n')),(0,r.kt)("p",null,"\u6211\u4eec\u53c8\u77e5\u9053\u5176\u5b9e\u5b57\u7b26\u4e32\u5b57\u9762\u91cf\u7684\u7c7b\u578b\u5c31\u662f",(0,r.kt)("inlineCode",{parentName:"p"},"&str"),"\uff0c\u53d8\u91cf\u901a\u8fc7\u6307\u9488\u6307\u5411\u7740\u7a0b\u5e8f\u4e8c\u8fdb\u5236\u6570\u636e\u4e2d\u8bb0\u5f55\u7684\u5b9e\u9645\u5b57\u7b26\u4e32\u5185\u5bb9\u3002"),(0,r.kt)("h3",{id:"trait-object-1"},"Trait Object"),(0,r.kt)("p",null,"\u5728\u4e0a\u4e00\u7ae0\u8282\u6211\u4eec\u63d0\u5230\u6cdb\u578b\u96be\u4ee5\u8868\u8fbe\u5f02\u6784\u96c6\u5408\uff0c\u5e76\u7ed9\u51fa\u4e86\u4e00\u4e2a\u4ee3\u7801\u4f8b\u5b50\u3002\u901a\u5e38\u8fd9\u79cd\u60c5\u51b5\u4e0b\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528Trait Object\u6765\u5b9e\u73b0\u3002"),(0,r.kt)("p",null,"\u4e00\u822c\u4f7f\u7528",(0,r.kt)("inlineCode",{parentName:"p"},"dyn TraitA"),"\u7684\u8bed\u6cd5\u6765\u8868\u793aTrait Object\u7684\u7c7b\u578b\uff0c\u53c8\u56e0\u4e3aTrait Object\u662fDST\u9700\u8981\u501f\u52a9\u5f15\u7528\u6765\u4f7f\u7528\uff0c\u6240\u4ee5\u5b9e\u9645\u4e0a\u5927\u90e8\u5206\u6211\u4eec\u770b\u5230\u7684\u662f\u7c7b\u4f3c\u8fd9\u6837\u7684\u8bed\u6cd5",(0,r.kt)("inlineCode",{parentName:"p"},"&dyn TraitA"),"\u3001",(0,r.kt)("inlineCode",{parentName:"p"},"Box<dyn myTrait>"),"\uff08\u8fd9\u91cc\u7684\u533a\u522b\u5728\u4e8e\u540e\u8005\u62e5\u6709\u5b9e\u4f8b\u6570\u636e\u7684\u6240\u6709\u6743\uff09"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},"trait Run {}\n\nstruct Dog {\n    age: u32,\n}\n\nstruct Cat {\n    age: u32,\n}\n\nimpl Run for Dog {}\n\nimpl Run for Cat {}\n\nfn main() {\n    test2(vec![&Dog { age: 20 }, &Cat { age: 10 }]);\n    test3(vec![Box::new(Dog { age: 20 }), Box::new(Cat { age: 10 })]);\n}\n\nfn test2(v: Vec<&dyn Run>) {}\nfn test3(v: Vec<Box<dyn Run>>) {}\n")),(0,r.kt)("h3",{id:"dst\u4e0e\u80d6\u6307\u9488"},"DST\u4e0e\u80d6\u6307\u9488"),(0,r.kt)("p",null,"\u5982\u540c\u4e0a\u6587\u6240\u5c5e\uff0cDST\u901a\u5e38\u9700\u8981\u901a\u8fc7\u5f15\u7528\u6765\u8fdb\u884c\u64cd\u4f5c\uff0c\u5e76\u4e14\u8fd9\u91cc\u7684\u5f15\u7528\u4e0d\u518d\u662f\u4e00\u4e2a\u666e\u901a\u7684\u6307\u9488\uff0c\u800c\u662f\u4e00\u4e2a\u80d6\u6307\u9488\u3002"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u5bf9\u4e8eSlice\u7c7b\u578b\u7684\u5f15\u7528\uff0c\u9664\u4e86\u9700\u8981\u5305\u542b\u4e86\u4f4d\u7f6e\u7684\u6307\u9488\u5916\uff0c\u8fd8\u9700\u8981\u8bb0\u5f55\u5207\u7247\u7684\u957f\u5ea6\u3002"),(0,r.kt)("li",{parentName:"ul"},"\u5bf9\u4e8eTrait Object\u7c7b\u578b\u7684\u5f15\u7528\uff0c\u9664\u4e86\u9700\u8981\u5305\u542b\u4e86\u5b9e\u4f8b\u4f4d\u7f6e\u7684\u6307\u9488\u5916\uff0c\u8fd8\u9700\u8981\u80fd\u6307\u5411vtable\uff08\u865a\u62df\u8868\uff09\uff0c\u4ece\u800c\u5728\u7f16\u8bd1\u65f6\u53ef\u4ee5\u77e5\u9053\u8bbf\u95ee\u54ea\u4e9b\u65b9\u6cd5\u3002")),(0,r.kt)("h2",{id:"\u9519\u8bef\u5904\u7406"},"\u9519\u8bef\u5904\u7406"),(0,r.kt)("p",null,"Rust\u628a\u9519\u8bef\u5206\u4e3a\u4e24\u79cd\u7c7b\u578b\uff0c\u53ef\u6062\u590d\u9519\u8bef\u548c\u4e0d\u53ef\u6062\u590d\u9519\u8bef\u3002"),(0,r.kt)("p",null,"\u53ef\u6062\u590d\u9519\u8bef\uff0c\u6bd4\u5982\u8bf4\u8bfb\u53d6\u4e00\u4e2a\u6587\u4ef6\uff0c\u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728\u65f6\u6211\u4eec\u5e94\u8be5\u8ba9\u5916\u90e8\u80fd\u591f\u611f\u77e5\u5230\uff1b\u4e0d\u53ef\u6062\u590d\u9519\u8bef\uff0c\u6bd4\u5982\u8d8a\u754c\u8bbf\u95ee\u6570\u7ec4\uff0c\u4e00\u65e6\u51fa\u73b0\u4e86\u8fd9\u79cd\u4e0d\u5b89\u5168\u7684\u5185\u5b58\u8bbf\u95eeBUG\u6211\u4eec\u53ef\u80fd\u4f1a\u76f4\u63a5\u901a\u8fc7",(0,r.kt)("inlineCode",{parentName:"p"},"panic!"),"\u6765\u9000\u51fa\u8fdb\u7a0b\u3002"),(0,r.kt)("h3",{id:"panic"},"panic"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"panic"),"\u4e5f\u5b58\u5728\u4e24\u79cd\u884c\u4e3a\uff0c\u9ed8\u8ba4\u7684",(0,r.kt)("inlineCode",{parentName:"p"},"unwind"),"\u548c",(0,r.kt)("inlineCode",{parentName:"p"},"abort"),"\u3002\u5176\u4e2d",(0,r.kt)("inlineCode",{parentName:"p"},"unwind"),"\u610f\u5473\u7740\u9000\u51fa\u7a0b\u5e8f\u7684\u65f6\u5019Rust\u4f1a\u81ea\u52a8\u5c55\u5f00\u5806\u6808\u5e76\u6e05\u7a7a\u6570\u636e\uff0c\u4f46\u8fd9\u4f1a\u6709\u4e00\u4e9b\u5de5\u4f5c\u91cf\u3002\u800c\u4e00\u65e6\u91c7\u7528",(0,r.kt)("inlineCode",{parentName:"p"},"abort"),"\uff0c\u90a3\u4e48\u7a0b\u5e8f\u4e2d\u4f7f\u7528\u7684\u5185\u5b58\u5c31\u4e0d\u4f1a\u88ab\u81ea\u52a8\u56de\u6536\uff0c\u6211\u4eec\u9700\u8981\u901a\u8fc7\u64cd\u4f5c\u7cfb\u7edf\u6765\u624b\u52a8\u8fdb\u884c\u6e05\u9664\u3002\u4e00\u822c\u901a\u8fc7\u4fee\u6539\u914d\u7f6e\u6587\u4ef6\u6765\u8c03\u6574\u8be5\u884c\u4e3a\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-toml"},"# cargo.toml\n[profile.release]\npanic = 'abort'\n")),(0,r.kt)("h3",{id:"result"},"Result"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},"enum Result<T, E> {\n    Ok(T),\n    Err(E),\n}\n")),(0,r.kt)("p",null,"\u5728\u679a\u4e3e\u4e00\u8282\u4e2d\uff0c\u6211\u4eec\u4e86\u89e3\u5230\u53ef\u4ee5\u4f7f\u7528",(0,r.kt)("inlineCode",{parentName:"p"},"Option<T>"),"\u6765\u5305\u88c5\u8868\u660e\u67d0\u4e2a\u503c\u53ef\u80fd\u4e3a\u7a7a\u3002\u7c7b\u4f3c\u7684\u9053\u7406\uff0c\u6211\u4eec\u901a\u8fc7",(0,r.kt)("inlineCode",{parentName:"p"},"Result<T, E>"),"\u6765\u4f5c\u4e3a\u51fd\u6570\u7684\u8fd4\u56de\u503c\uff0c\u6765\u8868\u660e\u8fd9\u4e2a\u51fd\u6570\u53ef\u80fd\u4f1a\u5b58\u5728\u5f02\u5e38\u60c5\u51b5\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'use std::fs::File;\n\nfn main() {\n    let f = File::open("hello.txt");\n\n    let f = match f {\n        Ok(file) => file,\n        Err(error) => panic!("Problem opening the file: {:?}", error),\n    };\n}\n')),(0,r.kt)("p",null,"\u4e00\u822c\u901a\u8fc7",(0,r.kt)("inlineCode",{parentName:"p"},"match"),"\u6765\u5339\u914d\u679a\u4e3e\u7684\u4e0d\u540c\u53ef\u80fd\u503c\uff0c\u4f46\u8fd9\u6709\u4e9b\u5197\u4f59\uff0c\u56e0\u6b64",(0,r.kt)("inlineCode",{parentName:"p"},"Result"),"\u5b9e\u73b0\u4e86\u4e00\u4e9b\u65b9\u4fbf\u7684\u65b9\u6cd5"),(0,r.kt)("h4",{id:"unwrap"},"unwrap"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"unwrap"),"\u65b9\u6cd5\u80fd\u591f\u5728",(0,r.kt)("inlineCode",{parentName:"p"},"Result"),"\u4e3a",(0,r.kt)("inlineCode",{parentName:"p"},"Ok"),"\u7684\u65f6\u5019\u8fd4\u56de\u5185\u90e8\u503c\uff0c\u4e3a",(0,r.kt)("inlineCode",{parentName:"p"},"Err"),"\u7684\u65f6\u5019",(0,r.kt)("inlineCode",{parentName:"p"},"panic"),"\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'fn main() {\n    let f = File::open("hello.txt").unwrap();\n}\n')),(0,r.kt)("h4",{id:"expect"},"expect"),(0,r.kt)("p",null,"\u4e0e",(0,r.kt)("inlineCode",{parentName:"p"},"unwrap"),"\u529f\u80fd\u4e00\u81f4\uff0c\u533a\u5206\u5728\u4e8e\u6211\u4eec\u53ef\u4ee5\u6307\u5b9a\u62a5\u9519\u65f6\u663e\u793a\u7ed9\u7528\u6237\u7684\u4fe1\u606f"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'fn main() {\n    let f = File::open("hello.txt").expect("\u9519\u8bef\u4fe1\u606f");\n}\n')),(0,r.kt)("h4",{id:"propagating-errors"},"propagating errors"),(0,r.kt)("p",null,"\u5f53\u4e00\u4e2a\u51fd\u6570\u7684\u5b9e\u73b0\u8c03\u7528\u4e86\u53ef\u80fd\u62a5\u9519\u7684\u5176\u4ed6\u51fd\u6570\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u624b\u52a8\u5bf9\u9519\u8bef\u8fdb\u884c\u5904\u7406\uff0c\u4f46\u4e5f\u53ef\u4ee5\u76f4\u63a5\u628a\u9519\u8bef\u629b\u51fa\u53bb\uff0c\u8fd9\u88ab\u79f0\u4e3a",(0,r.kt)("inlineCode",{parentName:"p"},"propagating errors"),"\uff0c",(0,r.kt)("inlineCode",{parentName:"p"},"Result"),"\u63d0\u4f9b\u4e86",(0,r.kt)("inlineCode",{parentName:"p"},"?"),"\u64cd\u4f5c\u7b26\u6765\u5feb\u901f\u5b9e\u73b0\u3002"),(0,r.kt)("p",null,"\u5bf9\u4e8e\u4ee5\u4e0b\u4ee3\u7801\uff0c\u5f53",(0,r.kt)("inlineCode",{parentName:"p"},"Result"),"\u4e3a",(0,r.kt)("inlineCode",{parentName:"p"},"Ok"),"\u65f6\u4f1a\u8fd4\u56de\u5185\u90e8\u503c\uff0c\u4e3a",(0,r.kt)("inlineCode",{parentName:"p"},"Err"),"\u7684\u65f6\u5019\u4f1a\u76f4\u63a5\u628a",(0,r.kt)("inlineCode",{parentName:"p"},"Err"),"\u4f5c\u4e3a",(0,r.kt)("inlineCode",{parentName:"p"},"test"),"\u51fd\u6570\u7684\u8fd4\u56de\u503c\u8fd4\u56de\u51fa\u53bb\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'fn test() {\n    let f = File::open("hello.txt")?;\n}\n')),(0,r.kt)("h4",{id:"unwrap_or_else"},"unwrap_or_else"),(0,r.kt)("p",null,"\u4e4b\u524d\u63d0\u5230\u7684",(0,r.kt)("inlineCode",{parentName:"p"},"unwrap"),"\u548c",(0,r.kt)("inlineCode",{parentName:"p"},"expect"),"\u90fd\u4f1a\u5728",(0,r.kt)("inlineCode",{parentName:"p"},"Err"),"\u7684\u65f6\u5019\u76f4\u63a5",(0,r.kt)("inlineCode",{parentName:"p"},"panic"),"\uff0c\u8fd9\u53ef\u80fd\u4e0d\u662f\u6211\u4eec\u60f3\u8981\u7684\u7ed3\u679c\uff0c\u8fd9\u65f6\u5019\u6211\u4eec\u9700\u8981\u4f7f\u7528",(0,r.kt)("inlineCode",{parentName:"p"},"unwrap_or_else"),"\u5e76\u4f20\u9012\u4e00\u4e2a\u95ed\u5305\u4f5c\u4e3a\u53c2\u6570"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'fn main() {\n    let f = File::open("hello.txt").unwrap_or_else(|error| {\n      // do something\n    })\n}\n')),(0,r.kt)("h2",{id:"\u95ed\u5305"},"\u95ed\u5305"),(0,r.kt)("p",null,"\u5728",(0,r.kt)("em",{parentName:"p"},"JavaScript"),"\u4e2d\uff0c\u58f0\u660e\u51fd\u6570\u7684\u65f6\u5019\u6211\u4eec\u4f1a\u5728\u8be5\u51fd\u6570\u7684",(0,r.kt)("inlineCode",{parentName:"p"},"[[scope]]"),"\u5c5e\u6027\u4e2d\u8bb0\u5f55\u8be5\u51fd\u6570\u7684\u4f5c\u7528\u57df\u94fe\uff08\u6267\u884c\u4e0a\u4e0b\u6587\u7684\u53d8\u91cf\u5bf9\u8c61VO\u7ec4\u6210\u7684\u6570\u7ec4\uff09\uff0c\u5728\u8c03\u7528\u8be5\u51fd\u6570\u7684\u65f6\u5019\u521b\u5efa\u65b0\u7684\u51fd\u6570\u6267\u884c\u4e0a\u4e0b\u6587\uff0c\u8be5\u51fd\u6570\u6267\u884c\u4e0a\u4e0b\u6587\u4e2d\u5305\u62ec\u51fd\u6570\u81ea\u8eab\u7684\u53d8\u91cf\u5bf9\u8c61\u4ee5\u53ca\u4f5c\u7528\u57df\u94fe\uff0c\u6267\u884c\u65f6\u5982\u679c\u5728\u5f53\u524d\u4f5c\u7528\u57df\u627e\u4e0d\u5230\u67d0\u4e2a\u53d8\u91cf\uff0c\u5219\u4f1a\u6cbf\u7740\u4f5c\u7528\u57df\u94fe\u5411\u4e0a\u67e5\u627e\u3002"),(0,r.kt)("p",null,"\u5bf9\u4e8e\u8fd9\u79cd\uff0c\u5728\u58f0\u660e\u51fd\u6570\u65f6\u6355\u83b7\u51fd\u6570\u4f5c\u7528\u57df\u7684\u884c\u4e3a\u901a\u5e38\u4e5f\u88ab\u79f0\u4f5c\u95ed\u5305\u3002"),(0,r.kt)("p",null,"\u4e0e",(0,r.kt)("em",{parentName:"p"},"JavaScript"),"\u4e0d\u540c\uff0c",(0,r.kt)("em",{parentName:"p"},"Rust"),"\u4e2d\u7684\u51fd\u6570\u4e0d\u4f1a\u6355\u83b7\u5f53\u524d\u7684\u4f5c\u7528\u57df\uff0c\u4e5f\u5c31\u610f\u5473\u7740\u4ee5\u4e0b\u7684\u4ee3\u7801\u662f\u65e0\u6548\u7684"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'fn main() {\n    let s = "hello";\n    fn test() {\n        println!("{}", s) // \u9519\u8bef\n    }\n\n    test();\n}\n')),(0,r.kt)("p",null,"\u4e3a\u4e86\u89e3\u51b3\u8fd9\u6837\u7684\u95ee\u9898\uff0cRust\u4e5f\u5f15\u5165\u4e86\u95ed\u5305\u51fd\u6570\uff0c\u95ed\u5305\u53ef\u4ee5\u6355\u83b7\u5f53\u524d\u4f5c\u7528\u57df\uff0c\u901a\u5e38\u662f\u4f5c\u4e3a\u533f\u540d\u51fd\u6570\u4fdd\u5b58\u5728\u53d8\u91cf\u4e2d\u3001\u6216\u8005\u76f4\u63a5\u4f5c\u4e3a\u51fd\u6570\u7684\u53c2\u6570\u4f7f\u7528\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'fn main() {\n    let s = "hello";\n    let f = |name: &str| {\n        println!("{}, {}", s, name)\n    };\n    f("world");\n}\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'let f = File::open("hello.txt").unwrap_or_else(|error| {\n        // do something\n})\n')),(0,r.kt)("h2",{id:"\u6a21\u5f0f\u5339\u914dpattern-match"},"\u6a21\u5f0f\u5339\u914d\uff08pattern match\uff09"),(0,r.kt)("p",null,"\u6a21\u5f0f\uff08",(0,r.kt)("inlineCode",{parentName:"p"},"pattern"),"\uff09\u901a\u5e38\u7531\u4ee5\u4e0b\u5185\u5bb9\u7ec4\u6210\uff1a"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u5b57\u9762\u91cf\uff0c\u5982",(0,r.kt)("inlineCode",{parentName:"li"},"1")),(0,r.kt)("li",{parentName:"ul"},"\u53d8\u91cf\uff0c\u5982",(0,r.kt)("inlineCode",{parentName:"li"},"x")),(0,r.kt)("li",{parentName:"ul"},"\u89e3\u6784\u6570\u7ec4\u3001\u5143\u7956\u3001\u7ed3\u6784\u4f53\u3001\u679a\u4e3e\uff0c\u5982",(0,r.kt)("inlineCode",{parentName:"li"},"[x, y, z]"),"\u3001",(0,r.kt)("inlineCode",{parentName:"li"},"(a, b, c)"),"\u3001",(0,r.kt)("inlineCode",{parentName:"li"},"Point { x, y }"),"\u3001",(0,r.kt)("inlineCode",{parentName:"li"},"Some(x)")),(0,r.kt)("li",{parentName:"ul"},"\u901a\u914d\u7b26\u4e0e\u5360\u4f4d\u7b26\uff0c\u5982",(0,r.kt)("inlineCode",{parentName:"li"},"_"),"\u6216\u4ee5",(0,r.kt)("inlineCode",{parentName:"li"},"_"),"\u5f00\u5934\u7684\u53d8\u91cf")),(0,r.kt)("p",null,"\u6a21\u5f0f\u4e3b\u8981\u5728\u4ee5\u4e0b\u5730\u65b9\u4f7f\u7528\uff1a"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"match"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-rust"},"match VALUE {\n    PATTERN => EXPRESSION,\n    PATTERN => EXPRESSION,\n    PATTERN => EXPRESSION,\n}\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"if let"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-rust"},"if let Some(x) = y {\n  \n} else if xx {\n  \n} else if let Some(z) = w {\n  \n} else {\n  \n}\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"while let"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-rust"},"while let Some(x) = y {\n  \n}\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"for...in"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'let vector = vec![Point { x: 100, y: 200}, Point { x: 200, y: 400}];\nfor &Point { x, y } in vector.iter() {\n    println!("{}, {}", x, y);\n}\n'))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"let"),(0,r.kt)("p",{parentName:"li"},"\u4e8b\u5b9e\u4e0a",(0,r.kt)("inlineCode",{parentName:"p"},"let"),"\u8bed\u53e5\u4e2d\u7684\u53d8\u91cf\u540d\u4e5f\u662f\u8868\u8fbe\u5f0f"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-rust"},"let x = 5; // let PATTERN = EXPRESSION;\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u51fd\u6570\u53c2\u6570"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'fn print_coordinates(&(x, y): &(i32, i32)) {\n    println!("Current location: ({}, {})", x, y);\n}\n\nfn main() {\n    let point = (3, 5);\n    print_coordinates(&point);\n}\n')))),(0,r.kt)("h3",{id:"refutableirrefutable"},(0,r.kt)("inlineCode",{parentName:"h3"},"refutable"),"\u3001",(0,r.kt)("inlineCode",{parentName:"h3"},"irrefutable")),(0,r.kt)("p",null,"\u6a21\u5f0f\u7684\u4e24\u79cd\u5f62\u5f0f\uff0c",(0,r.kt)("inlineCode",{parentName:"p"},"refutable"),"\u548c",(0,r.kt)("inlineCode",{parentName:"p"},"irrefutable")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"irrefutable"),"\uff0c\u6307\u7684\u662f\u80fd\u591f\u5339\u914d\u4efb\u4f55\u53ef\u80fd\u7684\u503c\uff0c\u5982",(0,r.kt)("inlineCode",{parentName:"li"},"let x = 1"),"\u4e2d\u7684\u6a21\u5f0f",(0,r.kt)("inlineCode",{parentName:"li"},"x"),"\uff0c\u6216\u8005\u7ed3\u6784\u4f53\uff0c\u53c8\u6216\u8005\u53ea\u6709\u4e00\u4e2a\u53d8\u4f53\u7684\u679a\u4e3e"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"refutable"),"\uff0c\u503c\u5f97\u662f\u53ef\u80fd\u5b58\u5728\u65e0\u6cd5\u5339\u914d\u7684\u60c5\u51b5\uff0c\u5982",(0,r.kt)("inlineCode",{parentName:"li"},"if let Some(x) = y"),"\u4e2d\u7684\u6a21\u5f0f",(0,r.kt)("inlineCode",{parentName:"li"},"Some(x)"),"\uff0c\u5f53",(0,r.kt)("inlineCode",{parentName:"li"},"y"),"\u4e3a",(0,r.kt)("inlineCode",{parentName:"li"},"None"),"\u65f6\u5339\u914d\u5931\u8d25")),(0,r.kt)("p",null,"\u51fd\u6570\u53c2\u6570\u3001",(0,r.kt)("inlineCode",{parentName:"p"},"let"),"\u8bed\u53e5\u3001",(0,r.kt)("inlineCode",{parentName:"p"},"for"),"\u5faa\u73af\u53ea\u63a5\u6536",(0,r.kt)("inlineCode",{parentName:"p"},"irrefutable"),"\u6a21\u5f0f\uff0c\u5373\u6211\u4eec\u4e0d\u80fd\u4f7f\u7528\u7c7b\u4f3c\u8fd9\u6837\u7684\u8bed\u6cd5",(0,r.kt)("inlineCode",{parentName:"p"},"let Some(x) = 100"),"\uff1b\u800c",(0,r.kt)("inlineCode",{parentName:"p"},"if let"),"\u3001",(0,r.kt)("inlineCode",{parentName:"p"},"while let"),"\u63a5\u6536\u4efb\u4f55\u6a21\u5f0f\uff0c\u53ea\u662f\u5728\u63a5\u6536",(0,r.kt)("inlineCode",{parentName:"p"},"irrefutable"),"\u7684\u6a21\u5f0f\u65f6\u4f1a\u8fdb\u884c\u8b66\u544a\uff0c\u56e0\u4e3a\u4e00\u822c\u4e0d\u63a8\u8350\u8fd9\u4e48\u505a\uff0c\u5982",(0,r.kt)("inlineCode",{parentName:"p"},"if let x = 100"),"\u3002"),(0,r.kt)("h3",{id:"multiple-patterns"},"Multiple patterns"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'let x = 1;\n\nmatch x {\n    1 | 2 => println!("one or two"),\n    3 => println!("three"),\n    _ => println!("anything"),\n}\n')),(0,r.kt)("h3",{id:"\u5339\u914d\u8303\u56f4"},"\u5339\u914d\u8303\u56f4",(0,r.kt)("inlineCode",{parentName:"h3"},"..=")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'let x = 5;\n\nmatch x {\n    1..=5 => println!("one through five"),\n    _ => println!("something else"),\n}\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},"let x = 'c';\n\nmatch x {\n    'a'..='j' => println!(\"early ASCII letter\"),\n    'k'..='z' => println!(\"late ASCII letter\"),\n    _ => println!(\"something else\"),\n}\n")),(0,r.kt)("h3",{id:"\u89e3\u6784\u8d4b\u503c"},"\u89e3\u6784\u8d4b\u503c"),(0,r.kt)("h4",{id:"\u89e3\u6784struct"},"\u89e3\u6784Struct"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},"let p = Point { x: 0, y: 7 };\n\nlet Point { x: a, y: b } = p;\n")),(0,r.kt)("h4",{id:"\u89e3\u6784\u679a\u4e3e"},"\u89e3\u6784\u679a\u4e3e"),(0,r.kt)("p",null,"\u901a\u5e38\u6765\u8bf4\u679a\u4e3e\u5b58\u5728\u591a\u4e2a\u53d8\u4f53",(0,r.kt)("inlineCode",{parentName:"p"},"variants"),"\uff0c\u8fd9\u4e9b\u53d8\u4f53\u7684\u7c7b\u578b\u90fd\u662f\u76f8\u540c\u7684\u3002\u5bf9\u4e8e\u53ea\u6709\u4e00\u79cd\u53d8\u4f53\u7684\u679a\u4e3e\u4f1a\u88ab\u89c6\u4e3a",(0,r.kt)("inlineCode",{parentName:"p"},"irrefutable"),"\uff0c\u53ef\u4ee5\u901a\u8fc7",(0,r.kt)("inlineCode",{parentName:"p"},"let"),"\u76f4\u63a5\u89e3\u6784\u8d4b\u503c\uff0c\u800c\u5b58\u5728\u591a\u4e2a\u53d8\u4f53\u7684\u679a\u4e3e\u901a\u5e38\u90fd\u9700\u8981\u4f7f\u7528",(0,r.kt)("inlineCode",{parentName:"p"},"match"),"\u6765\u5339\u914d\u6bcf\u4e00\u79cd\u53d8\u4f53"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},"enum Akara {\n    P2 { x: u32, y: u32},\n}\n\nlet aka = Akara::P2 { x: 100, y: 200 };\nlet Akara::P2 { x, y } = aka; // success\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},"enum Akara {\n    P1,\n    P2 { x: u32, y: u32},\n}\n\nlet aka = Akara::P2 { x: 100, y: 200 };\nlet Akara::P2 { x, y } = aka; // error\n\nmatch aka {\n    Akara::P1 => (),\n    Akara::P2 { x, y } => (),\n    _ => () \n}\n")),(0,r.kt)("h4",{id:"\u89e3\u6784\u5143\u7ec4"},"\u89e3\u6784\u5143\u7ec4"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},"let ((feet, inches), Point { x, y }) = ((3, 10), Point { x: 3, y: -10 });\n")),(0,r.kt)("h3",{id:"\u7701\u7565\u53d8\u91cf"},"\u7701\u7565\u53d8\u91cf"),(0,r.kt)("p",null,"\u901a\u8fc7",(0,r.kt)("inlineCode",{parentName:"p"},"_"),"\u6216\u8005\u4ee5",(0,r.kt)("inlineCode",{parentName:"p"},"_"),"\u5f00\u5934\u7684\u53d8\u91cf\u6765\u7701\u7565\u53d8\u91cf\uff0c",(0,r.kt)("inlineCode",{parentName:"p"},"_"),"\u548c",(0,r.kt)("inlineCode",{parentName:"p"},"_x"),"\u7684\u533a\u522b\u5728\u4e8e",(0,r.kt)("inlineCode",{parentName:"p"},"_x"),"\u4ecd\u7136\u4f1a\u7ed1\u5b9a\u5177\u4f53\u7684\u503c\u53ea\u4e0d\u8fc7\u7f16\u8bd1\u5668\u5e76\u4e0d\u4f1a\u62a5\u9519\uff0c\u800c",(0,r.kt)("inlineCode",{parentName:"p"},"_"),"\u5e76\u4e0d\u4f1a\u7ed1\u5b9a\u4efb\u4f55\u7684\u503c\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'struct Point {\n    x: i32,\n    y: i32,\n    z: i32,\n}\n\nlet origin = Point { x: 0, y: 0, z: 0 };\n\nmatch origin {\n    Point { x, .. } => println!("x is {}", x),\n}\n')),(0,r.kt)("h3",{id:"match-guard"},"Match Guard"),(0,r.kt)("p",null,"\u5728",(0,r.kt)("inlineCode",{parentName:"p"},"match"),"\u8868\u8fbe\u5f0f\u4e2d\uff0c\u5bf9\u4e8e\u4e00\u4e9b\u6a21\u5f0f\u96be\u4ee5\u8868\u8fbe\u7684\u590d\u6742\u903b\u8f91\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528",(0,r.kt)("inlineCode",{parentName:"p"},"match guard"),"\u6765\u8f85\u52a9\u52a0\u5f3a\u6a21\u5f0f\u7684\u529f\u80fd\uff0c\u6240\u8c13",(0,r.kt)("inlineCode",{parentName:"p"},"match guard"),"\u6307\u7684\u662f",(0,r.kt)("inlineCode",{parentName:"p"},"match"),"\u5206\u652f\u4e2d\u6a21\u5f0f\u540e\u9762\u7684",(0,r.kt)("inlineCode",{parentName:"p"},"if"),"\u6761\u4ef6"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'let num = Some(4);\n\nmatch num {\n    Some(x) if x % 2 == 0 => println!("The number {} is even", x),\n    Some(x) => println!("The number {} is odd", x),\n    None => (),\n}\n')),(0,r.kt)("h3",{id:"bindings"},"@bindings"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'enum Akara {\n    P1,\n    P2 { x: u32, y: u32},\n}\n\nlet aka = Akara::P2 { x: 100, y: 200 };\nmatch aka {\n   Akara::P1 => (),\n   Akara::P2 { x: 1..=200, y} => println!("{}, {}", x, y), // error. cannot find value `x` in this scope\n   _ => () \n}\n')),(0,r.kt)("p",null,"\u5bf9\u4e8e\u4e0a\u8ff0\u60c5\u51b5\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528",(0,r.kt)("inlineCode",{parentName:"p"},"@"),"\u8fdb\u884c\u663e\u5f0f\u7684\u7ed1\u5b9a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'match aka {\n   Akara::P1 => (),\n   Akara::P2 { x: xx @ 1..=200, y} => println!("{}, {}", xx, y),\n   _ => () \n}\n')),(0,r.kt)("h2",{id:"\u591a\u7ebf\u7a0b\u7f16\u7a0b"},"\u591a\u7ebf\u7a0b\u7f16\u7a0b"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'use std::thread;\nuse std::time::Duration;\n\nfn main() {\n    thread::spawn(|| {\n        for i in 1..10 {\n            println!("hi number {} from the spawned thread!", i);\n            thread::sleep(Duration::from_millis(1));\n        }\n    });\n\n    for i in 1..5 {\n        println!("hi number {} from the main thread!", i);\n        thread::sleep(Duration::from_millis(1));\n    }\n}\n')),(0,r.kt)("p",null,"\u901a\u8fc7",(0,r.kt)("inlineCode",{parentName:"p"},"thread::spawn"),"\u521b\u5efa\u65b0\u7684\u5b50\u7ebf\u7a0b\uff0c\u5f53\u4e3b\u7ebf\u7a0b\u7ed3\u675f\u65f6\u4f1a\u81ea\u52a8\u7ed3\u675f\u6240\u6709\u5b50\u7ebf\u7a0b\u3002"),(0,r.kt)("h3",{id:"join-handles"},"Join Handles"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"thread::spawn"),"\u8fd4\u56de\u503c\u7684\u7c7b\u578b\u4e3a",(0,r.kt)("inlineCode",{parentName:"p"},"JoinHandle"),"\uff0c\u5f53\u6211\u4eec\u8c03\u7528\u5b83\u7684",(0,r.kt)("inlineCode",{parentName:"p"},"join"),"\u65b9\u6cd5\u65f6\uff0c\u4f1a\u7b49\u5f85\u8be5\u7ebf\u7a0b\u7ed3\u675f\uff0c\u5e76\u53ef\u4ee5\u901a\u8fc7",(0,r.kt)("inlineCode",{parentName:"p"},"unwrap"),"\u65b9\u6cd5\u83b7\u53d6\u8be5\u7ebf\u7a0b\u7684\u8fd4\u56de\u503c\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'fn main() {\n    let handle: JoinHandle<u32> = thread::spawn(|| {\n        thread::sleep(Duration::from_secs(1));\n        println!("\u4e00\u79d2\u540e");\n        100 + 200\n    });\n    \n    let value = handle.join().unwrap();\n\n    println!("{}", value); // 300\n}\n')),(0,r.kt)("h3",{id:"move-\u95ed\u5305"},"move \u95ed\u5305"),(0,r.kt)("p",null,"\u6838\u5fc3\u95ee\u9898\u5728\u4e8e\uff1aRust\u4e0d\u77e5\u9053\u5b50\u7ebf\u7a0b\u5c06\u8fd0\u884c\u591a\u4e45\uff0c\u56e0\u6b64\u96be\u4ee5\u5bf9\u95ed\u5305\u4e2d\u6355\u83b7\u7684\u5f15\u7528\u8fdb\u884c\u9759\u6001\u5206\u6790\uff08Borrow Check\uff09"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'use std::thread;\n\nfn main() {\n    let v = vec![1, 2, 3];\n\n    let handle = thread::spawn(|| { // error\n        println!("Here\'s a vector: {:?}", v);\n    });\n\n    handle.join().unwrap();\n}\n')),(0,r.kt)("p",null,"\u89e3\u51b3\u529e\u6cd5\uff1a\u5728\u521b\u5efa\u7ebf\u7a0b\u65f6\u4f20\u5165\u7684\u95ed\u5305\u4e2d\u663e\u5f0f\u6307\u5b9a",(0,r.kt)("inlineCode",{parentName:"p"},"move"),"\u6765\u8f6c\u79fb\u6240\u6709\u6743\uff0c\u800c\u4e0d\u662f\u8ba9Rust\u53bb\u9690\u5f0f\u63a8\u5bfc\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'use std::thread;\n\nfn main() {\n    let v = vec![1, 2, 3];\n\n    let handle = thread::spawn(move || {\n        println!("Here\'s a vector: {:?}", v);\n    });\n\n    handle.join().unwrap();\n}\n')),(0,r.kt)("h3",{id:"\u7ebf\u7a0b\u95f4\u901a\u4fe1"},"\u7ebf\u7a0b\u95f4\u901a\u4fe1"),(0,r.kt)("p",null,"\u901a\u8fc7\u4f7f\u7528",(0,r.kt)("em",{parentName:"p"},"channel"),"\u5b9e\u73b0\u7ebf\u7a0b\u95f4\u7684\u901a\u4fe1\uff0c\u4e0b\u65b9\u7684",(0,r.kt)("inlineCode",{parentName:"p"},"tx"),"\u548c",(0,r.kt)("inlineCode",{parentName:"p"},"rx"),"\u5206\u522b\u8868\u793a\u7740",(0,r.kt)("inlineCode",{parentName:"p"},"transmitter"),"\u548c",(0,r.kt)("inlineCode",{parentName:"p"},"receiver")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'use std::sync::mpsc;\nuse std::thread;\n\nfn main() {\n    let (tx, rx) = mpsc::channel();\n\n    thread::spawn(move || {\n        let val = String::from("hi");\n        tx.send(val).unwrap();\n    });\n\n    let received = rx.recv().unwrap();\n    println!("Got: {}", received);\n}\n')),(0,r.kt)("h2",{id:"\u5176\u4ed6"},"\u5176\u4ed6"),(0,r.kt)("h3",{id:"r"},"r#...#"),(0,r.kt)("p",null,"\u7528\u6765\u8868\u793a\u539f\u59cb\u5b57\u7b26\u4e32\uff0c\u4e0d\u7528\u518d\u624b\u52a8\u8f6c\u4e49"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'let html = r#"\n    <!DOCTYPE html>\n    <meta charset="utf-8">\n    <title>Hello, world!</title>\n    <h1 class="foo">Hello, <i>world!</i></h1>\n"#;\n')),(0,r.kt)("h3",{id:"\u53d1\u5e03\u4e8c\u8fdb\u5236"},"\u53d1\u5e03\u4e8c\u8fdb\u5236"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"cargo login")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"cargo publish")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"cargo install <name>"))),(0,r.kt)("p",null,"\u901a\u8fc7",(0,r.kt)("inlineCode",{parentName:"p"},"cargo publish"),"\u5c06\u6e90\u4ee3\u7801\u63a8\u9001\u5230crates.io\uff0c\u5176\u4ed6\u4ebacargo install\u7684\u65f6\u5019\u4f1a\u62c9\u4e0b\u4ee3\u7801\u5e76\u81ea\u52a8\u901a\u8fc7cargo build --release\u751f\u6210\u4e8c\u8fdb\u5236\u4ea7\u7269"),(0,r.kt)("h3",{id:"\u5185\u7f6e\u6a21\u5757"},"\u5185\u7f6e\u6a21\u5757"),(0,r.kt)("h4",{id:"stdfs"},"std::fs"))}d.isMDXComponent=!0}}]);